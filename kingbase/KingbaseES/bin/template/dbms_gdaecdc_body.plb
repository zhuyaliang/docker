CREATE OR REPLACE PACKAGE BODY SYS_CATALOG.DBMS_GDAECDC WRAPPED
QVMgIAoJLyoKCWdldCBleGNlcHRpb24gZXJyb3IgbWVzc2FnZQoJKi8KCUZV
TkNUSU9OIGZfZ2V0U3FsZXJybSgpCglSRVRVUk5TIFRFWFQKCUFTCglERUNM
QVJFCgl2YXJfcmV0IFRFWFQ7CglCRUdJTgoJCXZhcl9yZXQgOj0gc3FsZXJy
bSgpOwoJCVJFVFVSTiB2YXJfcmV0OwoJRU5EOwoJLyogcmFpc2UgR0RBRSBl
eGNlcHRpb24gKi8KCUZVTkNUSU9OIGZfcmFpc2VHZGFlRXJyb3IoCgkJZXJy
b3JNc2cgVkFSQ0hBUigyMDApKQoJUkVUVVJOUyBWQVJDSEFSKDIwMCkKCUFT
CglERUNMQVJFCgl2YXJfZXJyb3IgVEVYVCA6PSAnW0dkYWVDYXB0dXJlRXJy
b3JdICcgfHwgZXJyb3JNc2c7CglCRUdJTgoJCVJBSVNFX0FQUExJQ0FUSU9O
X0VSUk9SKC0yMDEyMCx2YXJfZXJyb3IpOwoJCVJFVFVSTiBlcnJvck1zZzsK
CUVORDsKCS8qIGdldCBzZXF1ZW5jZSBuYW1lIGZvciBzdWJzY3JpcHRpb24g
dGFibGUgKi8KCUZVTkNUSU9OIGZfZ2V0U2VxTmFtZSgKCQl0YWJsZV9uYW1l
IFZBUkNIQVIoMjAwKSkgCglSRVRVUk5TIFZBUkNIQVIoMjAwKQoJQVMKCUJF
R0lOCgkJUkVUVVJOICdTRVE0R0RBRV8nfHx0YWJsZV9uYW1lOyAKCUVORDsK
CS8qCgljaGVjayBjYXB0dXJlIGluZm8KCSovCglGVU5DVElPTiBmX2NoZWNr
Q2FwdHVyZVRhYmxlcygKCQlzcmNfc2NoZW1hX25hbWUgVkFSQ0hBUigyMDAp
LAoJCXNyY190YWJsZV9uYW1lIFZBUkNIQVIoMjAwKSwKCQlpc1Jvd0lECQlC
T09MRUFOLAoJCWNvbF9uYW1lcyBWQVJDSEFSKDIwMClbXSwKCQlleHByX3R5
cGVzIFZBUkNIQVIoMjAwKVtdLAoJCWV4cHJfY29udGVudHMgVkFSQ0hBUigy
MDApW10sCgkJY2FwdHVyZWRfY29uZGl0aW9ucyBWQVJDSEFSKDIwMCkKCSkK
CVJFVFVSTlMgVkFSQ0hBUigyMDApCglBUwoJREVDTEFSRQoJdmFyX3JldCBW
QVJDSEFSKDIwMCkgOj0gJyc7Cgl2YXJfYXJyYXlfcm93IElOVCA6PSAwOwoJ
dmFyX25hbWVzX3NpemUgSU5UIDo9IDA7Cgl2YXJfdHlwZXNfc2l6ZSBJTlQg
Oj0gMDsKCXZhcl90YWJfb2lkIE9JRCA6PSAwOwoJdmFyX3NxbCBURVhUIDo9
ICcnOwoJdmFyX2NvdW50IElOVCA6PSAwOwoJQkVHSU4KCQl2YXJfbmFtZXNf
c2l6ZSA6PSBJc051bGwoQVJSQVlfTEVOR1RIKGNvbF9uYW1lcywxKSwwKTsK
CQl2YXJfdHlwZXNfc2l6ZSA6PSBJc051bGwoQVJSQVlfTEVOR1RIKGV4cHJf
dHlwZXMsMSksMCk7CgkJSUYgKHNyY19zY2hlbWFfbmFtZSBJUyBOdWxsIE9S
IExFTkdUSChzcmNfc2NoZW1hX25hbWUpID0gMCkgVEhFTgoJCQl2YXJfcmV0
IDo9ICdzb3VyY2Ugc2NoZW1hIGludmFsaWQnOwoJCQlEQk1TX0dEQUVDREMu
Zl9yYWlzZUdkYWVFcnJvcih2YXJfcmV0KTsKCQkJUkVUVVJOIHZhcl9yZXQ7
CgkJRU5EIElGOwoJCQoJCUlGIChzcmNfdGFibGVfbmFtZSBJUyBOdWxsIE9S
IExFTkdUSChzcmNfdGFibGVfbmFtZSkgPSAwKSBUSEVOCgkJCXZhcl9yZXQg
Oj0gJ3NvdXJjZSB0YWJsZSBpbnZhbGlkLic7CgkJCURCTVNfR0RBRUNEQy5m
X3JhaXNlR2RhZUVycm9yKHZhcl9yZXQpOwoJCQlSRVRVUk4gdmFyX3JldDsK
CQlFTkQgSUY7CgkJCgkgIAl2YXJfdGFiX29pZCA6PSBEQk1TX0dEQUVDREMu
Zl9nZXRUYWJsZU9JRChzcmNfc2NoZW1hX25hbWUsc3JjX3RhYmxlX25hbWUp
OwoJICAJSUYgKHZhcl90YWJfb2lkID0gMCkgVEhFTgoJCQl2YXJfcmV0IDo9
ICd0YWJsZSAnfHxzcmNfdGFibGVfbmFtZSB8JyBkb2VzbicndCBleGlzdCBp
biBzY2hlbWEgJ3x8c3JjX3NjaGVtYV9uYW1lOwoJCQlEQk1TX0dEQUVDREMu
Zl9yYWlzZUdkYWVFcnJvcih2YXJfcmV0KTsKCQkJUkVUVVJOIHZhcl9yZXQ7
CgkgIAlFTkQgSUY7CgkJdmFyX2FycmF5X3JvdyA6PSAxOwoJCXZhcl9uYW1l
c19zaXplIDo9IElzTnVsbChBUlJBWV9MRU5HVEgoY29sX25hbWVzLDEpLDAp
OwoJCUxPT1AKCQkgICBJRiB2YXJfYXJyYXlfcm93ID4gdmFyX25hbWVzX3Np
emUgVEhFTiAKCQkJCUVYSVQ7CgkJCSAgRU5EIElGOwoJCSAgIElGIChJc051
bGwoTEVOR1RIKGV4cHJfY29udGVudHNbdmFyX2FycmF5X3Jvd10pLDApID0g
MCkgVEhFTiAvKiBub3JtYWwgY29sdW1uICovCgkJCSAgIHZhcl9zcWwgOj0g
dmFyX3NxbHx8JyInfHxjb2xfbmFtZXNbdmFyX2FycmF5X3Jvd118fCciLCc7
CgkJICAgRUxTRSAvKiBjb21wdXRlIGNvbHVtbiAqLwoJCQkgICBJRiAoKElz
TnVsbChMRU5HVEgoZXhwcl90eXBlc1t2YXJfYXJyYXlfcm93XSksMCkgPSAw
KSkgVEhFTgoJCQkJCXZhcl9yZXQgOj0gJ2NvbXB1dGUgY29sdW1uIHR5cGUg
aW52YWxpZCc7CgkJCQkJREJNU19HREFFQ0RDLmZfcmFpc2VHZGFlRXJyb3Io
dmFyX3JldCk7CgkJCSAgIEVORCBJRjsKCQkJICAgdmFyX3NxbCA6PSB2YXJf
c3FsfHxleHByX2NvbnRlbnRzW3Zhcl9hcnJheV9yb3ddfHwnLCc7CgkJICAg
RU5EIElGOwoJCSAgIHZhcl9hcnJheV9yb3cgOj0gdmFyX2FycmF5X3JvdyAr
IDE7CgkJRU5EIExPT1A7CgkJCgkJdmFyX3NxbCA6PSBMRUZUKHZhcl9zcWws
TEVOR1RIKHZhcl9zcWwpLTEpOwoJCUlGIChMRU5HVEgodmFyX3NxbCkgPiAw
KSBUSEVOCgkJCXZhcl9zcWwgOj0gJ1NFTEVDVCAnfHx2YXJfc3FsfHwnIEZS
T00gIid8fHNyY19zY2hlbWFfbmFtZXx8JyIuIid8fHNyY190YWJsZV9uYW1l
fHwnIiBXSEVSRSAxPTAnOwoJCQlCRUdJTgoJCQkJRVhFQ1VURSBJTU1FRElB
VEUgdmFyX3NxbDsKCQkJCUVYQ0VQVElPTiBXSEVOIE9USEVSUyBUSEVOCgkJ
CQlCRUdJTgoJCQkJCXZhcl9yZXQgOj0gJ2NhcHR1cmUgY29sdW1uIGludmFs
aWQsJ3x8REJNU19HREFFQ0RDLmZfZ2V0U3FsZXJybSgpOwoJCQkJCURCTVNf
R0RBRUNEQy5mX3JhaXNlR2RhZUVycm9yKHZhcl9yZXQpOwoJCQkJCVJFVFVS
TiB2YXJfcmV0OwoJCQkJRU5EOwoJCQlFTkQ7CgkJRU5EIElGOwoJCS8qIGNo
ZWNrIGV4cHJfdHlwZSxleHByX2NvbnRlbnRzICovCgkJSUYgKHZhcl90eXBl
c19zaXplIDw+IElzTnVsbChBUlJBWV9MRU5HVEgoZXhwcl9jb250ZW50cywx
KSwwKSkgVEhFTgoJCQl2YXJfcmV0IDo9ICdleHByZXNzaW9uIHR5cGVzJycg
bnVtYmVycyBtaXNtYXRjaCB0aGUgZXhwcmVzc2lvbicncyBudW1iZXJzJzsK
CQkJREJNU19HREFFQ0RDLmZfcmFpc2VHZGFlRXJyb3IodmFyX3JldCk7CgkJ
CVJFVFVSTiB2YXJfcmV0OwoJCUVORCBJRjsKCQkvKiBjaGVjayBST1dJRCBz
b3VyY2UgdGFibGUgbXVzdCBoYXZlIG9pZCovCgkJSUYgKCBUUlVFICkgVEhF
TgoJCQl2YXJfY291bnQgOj0gMDsKCQkJU0VMRUNUIENPVU5UKCopCgkJCUlO
VE8gdmFyX2NvdW50CgkJCUZST00gU1lTX0FUVFJJQlVURQoJCQlXSEVSRSBB
VFRSRUxJRCA9IHZhcl90YWJfb2lkIEFORAoJCQkJICBBVFROQU1FID0gJ09J
RCc7CgkJCUlGICh2YXJfY291bnQgPSAwKSBUSEVOCgkJCQl2YXJfcmV0IDo9
ICd0YWJsZSAnfHxzcmNfdGFibGVfbmFtZXx8JyBkb2VzbicndCBoYXZlIFJP
V0lEJzsKCQkJCURCTVNfR0RBRUNEQy5mX3JhaXNlR2RhZUVycm9yKHZhcl9y
ZXQpOwkJCQkKCQkJCVJFVFVSTiB2YXJfcmV0OwoJCQlFTkQgSUY7CgkJRU5E
IElGOwoJCS8qIGNoZWNrIGNhcHR1cmUgY29uZGl0aW9uICovCgkJSUYgKElz
TnVsbChMRU5HVEgoY2FwdHVyZWRfY29uZGl0aW9ucyksMCkgPiAwKSBUSEVO
CgkJCXZhcl9zcWwgOj0gJ1NFTEVDVCAnfHxjYXB0dXJlZF9jb25kaXRpb25z
fHwnIEZST00gIid8fHNyY19zY2hlbWFfbmFtZXx8JyIuIid8fHNyY190YWJs
ZV9uYW1lfHwnIiBXSEVSRSAxPTAnOwoJCQlCRUdJTgoJCQkJRVhFQ1VURSBJ
TU1FRElBVEUgdmFyX3NxbDsKCQkJCUVYQ0VQVElPTiBXSEVOIE9USEVSUyBU
SEVOCgkJCQlCRUdJTgoJCQkJCXZhcl9yZXQgOj0gJ2NhcHR1cmUgY29uZGl0
aW9uIGludmFsaWQsJ3x8REJNU19HREFFQ0RDLmZfZ2V0U3FsZXJybSgpOwoJ
CQkJCURCTVNfR0RBRUNEQy5mX3JhaXNlR2RhZUVycm9yKHZhcl9yZXQpOwoJ
CQkJCVJFVFVSTiB2YXJfcmV0OwoJCQkJRU5EOwoJCQlFTkQ7CgkJRU5EIElG
OwoJCVJFVFVSTiB2YXJfcmV0OwoJRU5EOwoJLyoKCWNvbXBhcmUgd2hldGhl
ciB2YWx1ZSBjaGFuZ2VkIG9yIG5vdAoJbm90IHN1cHBvcnQgYnl0ZWEsYml0
LGJpdCB2YXJ5aW5nCgkqLwoJRlVOQ1RJT04gZl9jb21wYXJlVmFsdWVzKHZh
bHVlMSBURVhULHZhbHVlMiBURVhUKQoJUkVUVVJOUyBCT09MRUFOCglBUwoJ
REVDTEFSRQoJQkVHSU4KCQlJRiAodmFsdWUxIElTIE5VTEwgQU5EIHZhbHVl
MiBJUyBOVUxMKSBUSEVOCgkJCVJFVFVSTiBUUlVFOwoJCUVMU0VJRiAodmFs
dWUxIElTIE5PVCBOVUxMIEFORCB2YWx1ZTIgSVMgTk9UIE5VTEwpIFRIRU4K
CQkJSUYgKHZhbHVlMSA9IHZhbHVlMikgVEhFTgoJCQkJUkVUVVJOIFRSVUU7
CgkJCUVMU0UKCQkJCVJFVFVSTiBGQUxTRTsKCQkJRU5EIElGOwoJCUVMU0UK
CQkJUkVUVVJOIEZBTFNFOwoJCUVORCBJRjsKCUVORDsgCgkvKgoJY29tcGFy
ZSBmb3IgQnl0ZWEKCSovCglGVU5DVElPTiBmX2NvbXBhcmVWYWx1ZXNCeXRl
YSh2YWx1ZTEgQllURUEsdmFsdWUyIEJZVEVBKQoJUkVUVVJOUyBCT09MRUFO
CglBUwoJREVDTEFSRQoJQkVHSU4KCQlJRiAodmFsdWUxIElTIE5VTEwgQU5E
IHZhbHVlMiBJUyBOVUxMKSBUSEVOCgkJCVJFVFVSTiBUUlVFOwoJCUVMU0VJ
RiAodmFsdWUxIElTIE5PVCBOVUxMIEFORCB2YWx1ZTIgSVMgTk9UIE5VTEwp
IFRIRU4KCQkJSUYgKHZhbHVlMSA9IHZhbHVlMikgVEhFTgoJCQkJUkVUVVJO
IFRSVUU7CgkJCUVMU0UKCQkJCVJFVFVSTiBGQUxTRTsKCQkJRU5EIElGOwoJ
CUVMU0UKCQkJUkVUVVJOIEZBTFNFOwoJCUVORCBJRjsKCUVORDsKCS8qCglj
b21wYXJlIGZvciBCaXQKCSovCglGVU5DVElPTiBmX2NvbXBhcmVWYWx1ZXNC
aXQodmFsdWUxIEJJVCBWQVJZSU5HKDY0MDAwKSx2YWx1ZTIgQklUIFZBUllJ
TkcoNjQwMDApKQoJUkVUVVJOUyBCT09MRUFOCglBUwoJREVDTEFSRQoJQkVH
SU4KCQlJRiAodmFsdWUxIElTIE5VTEwgQU5EIHZhbHVlMiBJUyBOVUxMKSBU
SEVOCgkJCVJFVFVSTiBUUlVFOwoJCUVMU0VJRiAodmFsdWUxIElTIE5PVCBO
VUxMIEFORCB2YWx1ZTIgSVMgTk9UIE5VTEwpIFRIRU4KCQkJSUYgKHZhbHVl
MSA9IHZhbHVlMikgVEhFTgoJCQkJUkVUVVJOIFRSVUU7CgkJCUVMU0UKCQkJ
CVJFVFVSTiBGQUxTRTsKCQkJRU5EIElGOwoJCUVMU0UKCQkJUkVUVVJOIEZB
TFNFOwoJCUVORCBJRjsKCUVORDsKCS8qCgljb21wYXJlIGZvciBUc3F1ZXJ5
CgkqLwoJRlVOQ1RJT04gZl9jb21wYXJlVmFsdWVzVHNxdWVyeSh2YWx1ZTEg
VFNRVUVSWSx2YWx1ZTIgVFNRVUVSWSkKCVJFVFVSTlMgQk9PTEVBTgoJQVMK
CURFQ0xBUkUKCUJFR0lOCgkJSUYgKHZhbHVlMSBJUyBOVUxMIEFORCB2YWx1
ZTIgSVMgTlVMTCkgVEhFTgoJCQlSRVRVUk4gVFJVRTsKCQlFTFNFSUYgKHZh
bHVlMSBJUyBOT1QgTlVMTCBBTkQgdmFsdWUyIElTIE5PVCBOVUxMKSBUSEVO
CgkJCUlGICh2YWx1ZTEgPSB2YWx1ZTIpIFRIRU4KCQkJCVJFVFVSTiBUUlVF
OwoJCQlFTFNFCgkJCQlSRVRVUk4gRkFMU0U7CgkJCUVORCBJRjsKCQlFTFNF
CgkJCVJFVFVSTiBGQUxTRTsKCQlFTkQgSUY7CglFTkQ7CgkvKgoJY3JlYXRl
IHN1YnNjcmlwdGlvbiB0YWJsZXMKCSovCglGVU5DVElPTiBmX2NyZWF0ZUNh
cHR1cmVUYWJsZXMoCgkJc3JjX3NjaGVtYV9uYW1lIFZBUkNIQVIoMjAwKSwK
CQlzcmNfdGFibGVfbmFtZSBWQVJDSEFSKDIwMCksCgkJaXNSb3dJRAkJQk9P
TEVBTiwKCQljb2xfbmFtZXMgVkFSQ0hBUigyMDApW10sCgkJZXhwcl90eXBl
cyBWQVJDSEFSKDIwMClbXSwKCQlleHByX2NvbnRlbnRzIFZBUkNIQVIoMjAw
KVtdLAoJCXRhYmxlX25hbWUgVkFSQ0hBUigyMDApLAoJCXRhYmxlX25hbWVf
YmxvYiBWQVJDSEFSKDIwMCkKCSkKCVJFVFVSTlMgVkFSQ0hBUigyMDApLyog
c3VjY2Vzc3MgJycgZWxzZSBlcnJvciBtZXNzYWdlICovCglBUwoJREVDTEFS
RQoJdmFyX2FycmF5X3JvdyBJTlQgOj0gMDsKCXZhcl9uYW1lc19zaXplIElO
VCA6PSAwOwoJdmFyX2NvbnRlbnRzX3NpemUgSU5UIDo9IDA7Cgl2YXJfc3Fs
X2NyZWF0ZSBURVhUIDo9ICcnOwoJdmFyX3RhYmxlX29pZCBPSUQgOj0gMDsK
CXZhcl9jb2x1bW5fZnR5cGUgVkFSQ0hBUigyMDApIDo9ICcnOwoJdmFyX3Jl
dCBWQVJDSEFSKDIwMCkgOj0gJyc7Cgl2YXJfdGFibGVfb3B0aW9uIFZBUkNI
QVIoNDAwKSA6PSAnJzsKCXZhcl90YWJsZV9vcHRpb25fYmxvYiBWQVJDSEFS
KDIwMCkgOj0gJyc7Cgl2YXJfaXNMb2JDb2x1bW4gQk9PTEVBTiA6PSBGQUxT
RTsKCUJFR0lOCgkJdmFyX25hbWVzX3NpemUgOj0gSXNOdWxsKEFSUkFZX0xF
TkdUSChjb2xfbmFtZXMsMSksMCk7CgkJdmFyX2NvbnRlbnRzX3NpemUgOj0g
SXNOdWxsKEFSUkFZX0xFTkdUSChleHByX2NvbnRlbnRzLDEpLDApOwoJCXZh
cl90YWJsZV9vcHRpb24gOj0gREJNU19HREFFQ0RDLmZfZ2V0U3ViVGFibGVJ
bmZvKDEsaXNSb3dJRCk7CgkJdmFyX3RhYmxlX29wdGlvbl9ibG9iIDo9IERC
TVNfR0RBRUNEQy5mX2dldFN1YlRhYmxlSW5mbygyLGlzUm93SUQpOwoJCS8q
IHRhYmxlIE9JRCAqLwoJCXZhcl90YWJsZV9vaWQgOj0gREJNU19HREFFQ0RD
LmZfZ2V0VGFibGVPSUQoc3JjX3NjaGVtYV9uYW1lLHNyY190YWJsZV9uYW1l
KTsJCgkJSUYgKHZhcl90YWJsZV9vaWQgaXMgbnVsbCBvciB2YXJfdGFibGVf
b2lkID0gMCkgVEhFTgoJCQl2YXJfcmV0IDo9ICd0YWJsZSAnIHx8IHNyY190
YWJsZV9uYW1lIHx8ICcgZG9lc24nJ3QgZXhpc3QgaW4gc2NoZW1hICcgfHwg
c3JjX3NjaGVtYV9uYW1lOwoJCQlEQk1TX0dEQUVDREMuZl9yYWlzZUdkYWVF
cnJvcih2YXJfcmV0KTsKCQkJUkVUVVJOIHZhcl9yZXQ7CgkJRU5EIElGOwoJ
CUlGIChsZW5ndGgodGFibGVfbmFtZSkgPiAwKSBUSEVOCgkJLyogY3JlYXRl
IHRhYmxlIHdoZW4gdGFibGVfbmFtZSBsZW5ndGggPiAwICovCgkJCXZhcl9h
cnJheV9yb3cgOj0gMTsKCQkJTE9PUAkJCQoJCQkJSUYgKHZhcl9uYW1lc19z
aXplID0gMCkgVEhFTgoJCQkJCXZhcl9zcWxfY3JlYXRlIDo9ICcqICwnOwoJ
CQkJCUVYSVQ7CgkJCQlFTkQgSUY7CgkJCQlJRiAodmFyX2FycmF5X3JvdyA+
IHZhcl9uYW1lc19zaXplKSBUSEVOCgkJCQkJRVhJVDsKCQkJCUVORCBJRjsJ
CQoJCQkJSUYgKGV4cHJfY29udGVudHNbdmFyX2FycmF5X3Jvd10gSVMgTk9U
IE5VTEwgQU5EIGV4cHJfY29udGVudHNbdmFyX2FycmF5X3Jvd10gPD4gJycp
IFRIRU4KCQkJCS8qIGNvbXB1dGUgY29sdW1uICovCgkJCQkJdmFyX3NxbF9j
cmVhdGUgOj0gdmFyX3NxbF9jcmVhdGUgfHwnIid8fCBjb2xfbmFtZXNbdmFy
X2FycmF5X3Jvd10gfHwgJyIgJyB8fCBleHByX3R5cGVzW3Zhcl9hcnJheV9y
b3ddIHx8ICcsJzsKCQkJCUVMU0UKCQkJCS8qIG5vcm1hbCBjb2x1bW4gKi8K
CQkJCQl2YXJfaXNMb2JDb2x1bW4gOj0gRkFMU0U7CgkJCQkJdmFyX2lzTG9i
Q29sdW1uIDo9IERCTVNfR0RBRUNEQy5mX2lzTG9iQ29sdW1uKHZhcl90YWJs
ZV9vaWQsY29sX25hbWVzW3Zhcl9hcnJheV9yb3ddKTsKCQkJCQlJRiAoTk9U
IHZhcl9pc0xvYkNvbHVtbikgVEhFTgoJCQkJCS8qIExvYiBjb2x1bW4gZG8g
bm90IGNyZWF0ZSBpbiBzdWJzY3JpcHRpb24gdGFibGUsaXQncyBpbiBsb2Ig
dGFibGUgKi8KCQkJCQkJdmFyX2NvbHVtbl9mdHlwZSA9IERCTVNfR0RBRUNE
Qy5mX2dldEZvcm1hdFR5cGUodmFyX3RhYmxlX29pZCxjb2xfbmFtZXNbdmFy
X2FycmF5X3Jvd10pOwoJCQkJCQlJRiAoSXNOdWxsKExFTkdUSCh2YXJfY29s
dW1uX2Z0eXBlKSwwKSA9IDApIFRIRU4KCQkJCQkJCXZhcl9yZXQgOj0gJ2Vy
cm9yIGhhcHBlbmVkIHdoZW4gZ2V0dGluZyBjYXB0dXJlZCBjb2x1bW4nJ3Mg
dHlwZWZvcm1hdCc7CgkJCQkJCQlEQk1TX0dEQUVDREMuZl9yYWlzZUdkYWVF
cnJvcih2YXJfcmV0KTsKCQkJCQkJCVJFVFVSTiB2YXJfcmV0OwoJCQkJCQlF
TkQgSUY7CgkJCQkJCXZhcl9zcWxfY3JlYXRlIDo9IHZhcl9zcWxfY3JlYXRl
IHx8JyInfHxjb2xfbmFtZXNbdmFyX2FycmF5X3Jvd10gfHwgJyIgJyB8fCB2
YXJfY29sdW1uX2Z0eXBlIHx8ICcsJzsKCQkJCQlFTkQgSUY7CgkJCQlFTkQg
SUY7CgkJCQl2YXJfYXJyYXlfcm93IDo9IHZhcl9hcnJheV9yb3cgKyAxOwoJ
CQlFTkQgTE9PUDsJCQoJCQl2YXJfc3FsX2NyZWF0ZSA6PSBMRUZUKHZhcl9z
cWxfY3JlYXRlLCBMRU5HVEgodmFyX3NxbF9jcmVhdGUpIC0gMSk7CgkJCQkJ
CQoJCQkvKiBzdWJzY3JpcHRpb24gdGFibGUgaW4gdGhlIHNhbWUgc2NoZW1h
IHdpdGggc291cmNlIHRhYmxlICovCgkJCXZhcl9zcWxfY3JlYXRlIDo9ICdD
UkVBVEUgVEFCTEUgIid8fHNyY19zY2hlbWFfbmFtZXx8JyIuIid8fHRhYmxl
X25hbWV8fCciKCd8fCB2YXJfdGFibGVfb3B0aW9uIHx8ICcsJyB8fCB2YXJf
c3FsX2NyZWF0ZXx8JyknOwoJCQlCRUdJTgoJCQkJRVhFQ1VURSBJTU1FRElB
VEUgdmFyX3NxbF9jcmVhdGU7LyogY3JlYXRlIHN1c2JzY3JpcHRpb24gdGFi
bGUgKi8KCQkJCUVYQ0VQVElPTiBXSEVOIE9USEVSUyBUSEVOCgkJCQlCRUdJ
TgoJCQkJCXJhaXNlIG5vdGljZSAnW0NyZWF0ZUNhcHR1cmVUYWJsZVN5bnRh
eEVycm9yXSAlJyx2YXJfc3FsX2NyZWF0ZTsKCQkJCQl2YXJfcmV0IDo9ICdm
YWlsZWQgdG8gY3JlYXRlIHN1YnNjcmlwdGlvbiB0YWJsZSxjaGVjayBjYXB0
dXJlZCBjb2x1bW5zLCd8fERCTVNfR0RBRUNEQy5mX2dldFNxbGVycm0oKTsK
CQkJCQlEQk1TX0dEQUVDREMuZl9yYWlzZUdkYWVFcnJvcih2YXJfcmV0KTsK
CQkJCQlSRVRVUk4gdmFyX3JldDsKCQkJCUVORDsKCQkJRU5EOwoJCUVORCBJ
RjsKCQlJRiAobGVuZ3RoKHRhYmxlX25hbWVfYmxvYikgPiAwKSBUSEVOCgkJ
CXZhcl9zcWxfY3JlYXRlIDo9ICdDUkVBVEUgVEFCTEUgIid8fHNyY19zY2hl
bWFfbmFtZXx8JyIuIid8fHRhYmxlX25hbWVfYmxvYnx8JyIoJ3x8dmFyX3Rh
YmxlX29wdGlvbl9ibG9ifHwnKSc7CgkJCUJFR0lOCgkJCQlFWEVDVVRFIElN
TUVESUFURSB2YXJfc3FsX2NyZWF0ZTsvKiBjcmVhdGUgc3Vic2NyaXB0aW9u
IGJsb2IgdGFibGUgKi8KCQkJCUVYQ0VQVElPTiBXSEVOIE9USEVSUyBUSEVO
CgkJCQlCRUdJTgoJCQkJCXZhcl9yZXQgOj0gJ2ZhaWxlZCB0byBjcmVhdGUg
c3Vic2NyaXB0aW9uIGJsb2IgdGFibGUsY2hlY2sgY2FwdHVyZWQgY29sdW1u
cywnfHxEQk1TX0dEQUVDREMuZl9nZXRTcWxlcnJtKCk7CgkJCQkJREJNU19H
REFFQ0RDLmZfcmFpc2VHZGFlRXJyb3IodmFyX3JldCk7CgkJCQkJUkVUVVJO
IHZhcl9yZXQ7CgkJCQlFTkQ7CgkJCUVORDsJCQkKCQlFTkQgSUY7CgkJUkVU
VVJOIHZhcl9yZXQ7CglFTkQ7CgkvKgoJY3JlYXRlIHRyaWdnZXIgZm9yIENE
QwoJKi8KCUZVTkNUSU9OIGZfY3JlYXRlQ2FwdHVyZVRyaWdnZXJzKAoJc3Jj
X3NjaGVtYV9uYW1lIFZBUkNIQVIoMjAwKSwKCXNyY190YWJsZV9uYW1lIFZB
UkNIQVIoMjAwKSwKCWlzUm93SUQgVkFSQ0hBUigyMDApLAoJY29sX25hbWVz
IFZBUkNIQVIoMjAwKVtdLAoJZXhwcl90eXBlcyBWQVJDSEFSKDIwMClbXSwK
CWV4cHJfY29udGVudHMgVkFSQ0hBUigyMDApW10sCglkZXNfc2NoZW1hX25h
bWUgVkFSQ0hBUigyMDApLAoJdGFibGVfbmFtZSBWQVJDSEFSKDIwMCksCgl0
YWJsZV9uYW1lX2Jsb2IgVkFSQ0hBUigyMDApLAoJY2FwdHVyZWRfY29uZGl0
aW9ucyBWQVJDSEFSKDIwMCksCglPVVQgdGFibGVfdHJpZ2dlcnMgVkFSQ0hB
UigyMDApW10gCgkpCglSRVRVUk5TIFZBUkNIQVIoMjAwKQoJQVMKCURFQ0xB
UkUKCXZhcl9yZXQgVkFSQ0hBUigyMDApIDo9ICcnOwoJdmFyX2NyZWF0ZVRy
aWdnZXIgVEVYVDsKCXZhcl9zcmNfdGFibGUgVkFSQ0hBUigyMDApIDo9ICci
J3x8c3JjX3NjaGVtYV9uYW1lfHwnIi4iJ3x8c3JjX3RhYmxlX25hbWV8fCci
JzsKCXZhcl9kZXNfdGFibGUgVkFSQ0hBUigyMDApIDo9ICciJ3x8ZGVzX3Nj
aGVtYV9uYW1lfHwnIi4iJ3x8dGFibGVfbmFtZXx8JyInOwoJdmFyX2Rlc190
YWJsZV9ibG9iIFZBUkNIQVIoMjAwKSA6PSAnIid8fGRlc19zY2hlbWFfbmFt
ZXx8JyIuIid8fHRhYmxlX25hbWVfYmxvYnx8JyInOyAKCXZhcl9hcnJheV9y
b3cgSU5UIDo9IDA7Cgl2YXJfbmFtZXNfc2l6ZSBJTlQgOj0gSXNOdWxsKEFS
UkFZX0xFTkdUSChjb2xfbmFtZXMsMSksMCk7Cgl2YXJfdGFibGVfY29sdW1u
cyBWQVJDSEFSKDIwMDApIDo9ICcnOwoJdmFyX3RhYmxlX2Jsb2JfY29sdW1u
cyBWQVJDSEFSKDIwMDApIDo9ICcnOwoJdmFyX3RhYmxlX2NvbHVtbnNfdmFs
dWVfaW5zZXJ0IFRFWFQgOj0gJyc7Cgl2YXJfdGFibGVfY29sdW1uc192YWx1
ZV91cGRhdGUgVEVYVCA6PSAnJzsKCXZhcl90YWJsZV9jb2x1bW5zX3ZhbHVl
X2RlbGV0ZSBURVhUIDo9ICcnOwoJdmFyX3RhYmxlX2NvbHVtbnNfdmFsdWVf
aW5zZXJ0X2tleXVwZGF0ZWQgVEVYVCA6PSAnJzsKCXZhcl90YWJsZV9ibG9i
X2NvbHVtbnNfdmFsdWUgVkFSQ0hBUigyMDAwKSA6PSAnJzsKCXZhcl90YWJf
aGFzQmxvYiBDSEFSKDEpIDo9ICdOJzsKCXZhcl9sb2JfaW5zZXJ0X25ldyBU
RVhUIDo9ICcgJzsKCXZhcl9sb2JfaW5zZXJ0X29sZCBURVhUIDo9ICcgJzsK
CXZhcl9jbXBmdW5jdGlvbiB2YXJjaGFyKDIwMCkgOj0gJyc7Cgl2YXJfbmV3
IFZBUkNIQVIoNDApIDo9ICcgKCBTRUxFQ1QgTkVXLiogKSBUICc7IAoJdmFy
X29sZCBWQVJDSEFSKDQwKSA6PSAnICggU0VMRUNUIE9MRC4qICkgVCAnOwoJ
dmFyX3NlcV9uYW1lIFZBUkNIQVIoMjAwKSA6PSAnIid8fGRlc19zY2hlbWFf
bmFtZXx8JyIuIid8fERCTVNfR0RBRUNEQy5mX2dldFNlcU5hbWUodGFibGVf
bmFtZSl8fCciJzsKCXZhcl9zZXFfbmV4dCBWQVJDSEFSKDIwMCkgOj0gJ05F
WFRWQUwoJyciJ3x8ZGVzX3NjaGVtYV9uYW1lfHwnIi4iJ3x8REJNU19HREFF
Q0RDLmZfZ2V0U2VxTmFtZSh0YWJsZV9uYW1lKXx8JyInJykgJzsKCXZhcl9j
b252ZXJ0X3R5cGUgVkFSQ0hBUigyMDApOwoJdmFyX3NjaGVtYW5hbWVfdG1w
IFZBUkNIQVIoMjAwKTsKCXZhcl90YWJsZW5hbWVfdG1wIFZBUkNIQVIoMjAw
KTsKCXZhcl9jb21wYXJlVmFsX25ldwlURVhUOwoJdmFyX2NvbXBhcmVWYWxf
b2xkCVRFWFQ7Cgl2YXJfY29udmVydF90eXBlX3NyYyBWQVJDSEFSKDIwMCk7
Cgl2YXJfaXNLZXlDb2x1bW4gQk9PTEVBTiA7CglCRUdJTgoJCS8qIGNyZWFl
IHNlcXVlbmNlIGZvciBzdWJzY3JpdGlvbiB0YWJsZSAqLwoJCUJFR0lOCgkJ
CUVYRUNVVEUgSU1NRURJQVRFICdDUkVBVEUgU0VRVUVOQ0UgJyB8fCB2YXJf
c2VxX25hbWU7CgkJCUVYQ0VQVElPTiBXSEVOIE9USEVSUyBUSEVOCgkJCUJF
R0lOCgkJCQl2YXJfcmV0IDo9ICdmYWlsZWQgdG8gY3JlYXRlIHNlcXVlbmNl
IGZvciBzdWJzY3JpcHRpb24gdGFibGUsJ3x8REJNU19HREFFQ0RDLmZfZ2V0
U3FsZXJybSgpOwoJCQkJREJNU19HREFFQ0RDLmZfcmFpc2VHZGFlRXJyb3Io
dmFyX3JldCk7CgkJCQlSRVRVUk4gdmFyX3JldDsKCQkJRU5EOwoJCUVORDsK
CQkKCQkKCQl0YWJsZV90cmlnZ2Vyc1sxXSA6PSAnVFJfJ3x8dGFibGVfbmFt
ZXx8Jyc7CQkKCQl2YXJfY3JlYXRlVHJpZ2dlciA6PSAnIENSRUFURSBPUiBS
RVBMQUNFIFRSSUdHRVIgIid8fHRhYmxlX3RyaWdnZXJzWzFdfHwnIiBBRlRF
UiBJTlNFUlQgT1IgVVBEQVRFIE9SIERFTEVURSBPTiAnfHx2YXJfc3JjX3Rh
YmxlCgkJCQkgIHx8Q0hSKDEzKXx8ICcgRk9SIEVBQ0ggUk9XICcgfHwgKENB
U0UgV0hFTiAoSXNOdWxsKExFTkdUSChSRVBMQUNFKGNhcHR1cmVkX2NvbmRp
dGlvbnMsJyAnLCcnKSksMCkgPiAwKSBUSEVOICcgV0hFUkUoJ3x8Y2FwdHVy
ZWRfY29uZGl0aW9uc3x8JykgJyBFTFNFICcgJyBFTkQpCgkJCSAgfHxDSFIo
MTMpfHwgJyBBUyAnCgkJCSAgfHxDSFIoMTMpfHwgJyBERUNMQVJFICcKCQkJ
LyogdmFyaWFibGUgZGVjbGFyYXRpb24gaW4gdHJpZ2dlciAqLwoJCQkgIHx8
Q0hSKDEzKXx8ICcgdmFyX2lzQ2FwdHVyZWQgQk9PTEVBTiA6PSBUUlVFOyAn
CgkJCSAgfHxDSFIoMTMpfHwgJyB2YXJfaXNDaGFuZ2VkIEJPT0xFQU4gOj0g
RkFMU0U7ICcKCQkJICB8fENIUigxMyl8fCAnIHZhcl9pc0Jsb2JSZWNvcmRl
ZCBCT09MRUFOIDo9IEZBTFNFOyAnCgkJCSAgfHxDSFIoMTMpfHwgJyB2YXJf
aXNLZXlDb2x1bW5VcGRhdGVkIEJPT0xFQU4gOj0gRkFMU0U7ICcKCQkJICB8
fENIUigxMyl8fCAnIHZhcl9pbnNlcnRUYWJsZUJsb2IgVEVYVCA6PSAnfHwo
Q0FTRSBXSEVOIElzTnVsbChMRU5HVEgodmFyX2Rlc190YWJsZV9ibG9iKSww
KT0wIFRIRU4gJycnJyc7JyBFTFNFICcnJ0lOU0VSVCBJTlRPICd8fHZhcl9k
ZXNfdGFibGVfYmxvYnx8JyBTRUxFQ1QgTlVMTCxOVUxMLE5VTEwgRlJPTSBE
VUFMIFdIRVJFIDE9MCAnJzsgJyBFTkQgKSAKCQkJICB8fENIUigxMyl8fCAn
IHZhcl9vcmRlciBCSUdJTlQgOj0gMDsgJwoJCQkgIHx8Q0hSKDEzKXx8ICcg
dmFyX29yZGVyMiBCSUdJTlQgOj0gMDsgJzsKCQkJICB2YXJfY3JlYXRlVHJp
Z2dlciA6PSB2YXJfY3JlYXRlVHJpZ2dlciAKCQkJICB8fENIUigxMyl8fCAn
IEJFR0lOICc7CgkJCS8qIGNhcHR1cmUgY29uZGl0aW9uICovCgkJCS8qIHJl
cGxhY2UgdGhpdCBmdW5jdGlvbiB3aXRoIHRyaWdnZXJfd2hlcmUgY2xhdXNl
CgkJSUYgKElzTnVsbChMRU5HVEgoUkVQTEFDRShjYXB0dXJlZF9jb25kaXRp
b25zLCcgJywnJykpLDApID4gMCkgVEhFTiAKCQl2YXJfY3JlYXRlVHJpZ2dl
ciA6PSB2YXJfY3JlYXRlVHJpZ2dlciAKCQkJICB8fENIUigxMyl8fCAnICAg
ICBJRiAoVEdfT1AgPSAnJ0lOU0VSVCcnKSBUSEVOICcKCQkJICB8fENIUigx
Myl8fCAnICAgICAgICAgU0VMRUNUICgnfHwgY2FwdHVyZWRfY29uZGl0aW9u
cyB8fCAnKScKCQkJICB8fENIUigxMyl8fCAnICAgICAgICAgSU5UTyAnfHwn
IHZhcl9pc0NhcHR1cmVkICcKCQkJICB8fENIUigxMyl8fCAnICAgICAgICAg
RlJPTSAnfHwgdmFyX25ldyB8fCc7JwoJCQkgIHx8Q0hSKDEzKXx8ICcgICAg
IEVORCBJRjsgJwoJCQkgIHx8Q0hSKDEzKXx8ICcgICAgIElGIChUR19PUCA9
ICcnREVMRVRFJycpIFRIRU4gJwoJCQkgIHx8Q0hSKDEzKXx8ICcgICAgICAg
ICBTRUxFQ1QgKCd8fCBjYXB0dXJlZF9jb25kaXRpb25zIHx8ICcpJwoJCQkg
IHx8Q0hSKDEzKXx8ICcgICAgICAgICBJTlRPICd8fCcgdmFyX2lzQ2FwdHVy
ZWQgJwoJCQkgIHx8Q0hSKDEzKXx8ICcgICAgICAgICBGUk9NICd8fCB2YXJf
b2xkIHx8JzsnCgkJCSAgfHxDSFIoMTMpfHwgJyAgICAgRU5EIElGOyAnCgkJ
CSAgfHxDSFIoMTMpfHwgJyAgICAgSUYgKFRHX09QID0gJydVUERBVEUnJykg
VEhFTiAnCgkJCSAgfHxDSFIoMTMpfHwgJyAgICAgICAgIFNFTEVDVCAoU0VM
RUNUICd8fGNhcHR1cmVkX2NvbmRpdGlvbnN8fCcgRlJPTSAnfHx2YXJfbmV3
fHwnKSBPUiAoU0VMRUNUICd8fGNhcHR1cmVkX2NvbmRpdGlvbnN8fCcgRlJP
TSAnfHx2YXJfb2xkfHwnKScKCQkJICB8fENIUigxMyl8fCAnICAgICAgICAg
SU5UTyAnfHwgJyB2YXJfaXNDYXB0dXJlZCAnCgkJCSAgfHxDSFIoMTMpfHwg
JyAgICAgICAgIEZST00gRFVBTCA7JwoJCQkgIHx8Q0hSKDEzKXx8ICcgICAg
IEVORCBJRjsgJzsKCQlFTkQgSUY7CQkKCQkqLwoJCS8qIHdoZXRoZXIgdXBk
YXRlIGNhcHR1cmUgY29sdW1ucyAqLwoJCXZhcl9jcmVhdGVUcmlnZ2VyIDo9
IHZhcl9jcmVhdGVUcmlnZ2VyIHx8IENIUigxMykKCQkJfHxDSFIoMTMpfHwg
JyAgICAgSUYgKFRHX09QID0gJydVUERBVEUnJyBBTkQgdmFyX2lzQ2FwdHVy
ZWQpIFRIRU4gJzsKCQl2YXJfYXJyYXlfcm93IDo9IDE7CgkJTE9PUCAgICAK
CQkJSUYgKHZhcl9hcnJheV9yb3cgPiB2YXJfbmFtZXNfc2l6ZSkgVEhFTgoJ
CQkJRVhJVDsKCQkJRU5EIElGOwoJCQlJRiAoSXNOdWxsKExFTkdUSChleHBy
X2NvbnRlbnRzW3Zhcl9hcnJheV9yb3ddKSwwKSA9IDApIFRIRU4KCQkJLyog
bm9ybWFsIGNvbHVtbiAqLwoJCQkJdmFyX3NjaGVtYW5hbWVfdG1wIDo9IHNy
Y19zY2hlbWFfbmFtZTsKCQkJCXZhcl90YWJsZW5hbWVfdG1wIDo9IHNyY190
YWJsZV9uYW1lOwoJCQkJdmFyX2NvbXBhcmVWYWxfbmV3IDo9ICdTRUxFQ1Qg
Iid8fGNvbF9uYW1lc1t2YXJfYXJyYXlfcm93XXx8JyIgRlJPTSAnfHx2YXJf
bmV3OwkJCQkKCQkJCXZhcl9jb21wYXJlVmFsX29sZCA6PSAnU0VMRUNUICIn
fHxjb2xfbmFtZXNbdmFyX2FycmF5X3Jvd118fCciIEZST00gJ3x8dmFyX29s
ZDsJCQkJCgkJCUVMU0UgLyogY29tcHV0ZSBjb2x1bW4gKi8KCQkJCXZhcl9z
Y2hlbWFuYW1lX3RtcCA6PSBkZXNfc2NoZW1hX25hbWU7CgkJCQl2YXJfdGFi
bGVuYW1lX3RtcCA6PSB0YWJsZV9uYW1lOwoJCQkJdmFyX2NvbXBhcmVWYWxf
bmV3IDo9ICdTRUxFQ1QgJ3x8ZXhwcl9jb250ZW50c1t2YXJfYXJyYXlfcm93
XXx8JyBGUk9NICd8fHZhcl9uZXc7CQkJCQoJCQkJdmFyX2NvbXBhcmVWYWxf
b2xkIDo9ICdTRUxFQ1QgJ3x8ZXhwcl9jb250ZW50c1t2YXJfYXJyYXlfcm93
XXx8JyBGUk9NICd8fHZhcl9vbGQ7CQoJCQlFTkQgSUY7CgkJCXZhcl9jbXBm
dW5jdGlvbiA6PSBEQk1TX0dEQUVDREMuZl9nZXRDb21wYXJlRnVudGlvbk5h
bWUoc3JjX3NjaGVtYV9uYW1lLHZhcl90YWJsZW5hbWVfdG1wLGNvbF9uYW1l
c1t2YXJfYXJyYXlfcm93XSk7CgkJCQkKCQkJSUYgKHZhcl9jbXBmdW5jdGlv
biA9ICcnIE9SIHZhcl9jbXBmdW5jdGlvbiBJUyBOVUxMKSBUSEVOCgkJCQl2
YXJfcmV0IDo9ICdlcnJvciBoYXBwZW5lZCB3aGVuIGZfZ2V0Q29tcGFyZUZ1
bnRpb25OYW1lJzsKCQkJCURCTVNfR0RBRUNEQy5mX3JhaXNlR2RhZUVycm9y
KHZhcl9yZXQpOwoJCQkJUkVUVVJOIHZhcl9yZXQ7CQoJCQlFTkQgSUY7CgkJ
CXZhcl9jb252ZXJ0X3R5cGUgOj0gREJNU19HREFFQ0RDLmZfZ2V0Rm9ybWF0
VHlwZShEQk1TX0dEQUVDREMuZl9nZXRUYWJsZU9JRCh2YXJfc2NoZW1hbmFt
ZV90bXAsdmFyX3RhYmxlbmFtZV90bXApLGNvbF9uYW1lc1t2YXJfYXJyYXlf
cm93XSk7CgkJCQoJCQkKCQkJSUYgKHZhcl9jb252ZXJ0X3R5cGUgSU4gKCdC
TE9CJywnQ0xPQicpIEFORCBJc051bGwoTEVOR1RIKGV4cHJfY29udGVudHNb
dmFyX2FycmF5X3Jvd10pLDApID0gMCkgVEhFTgoJCQkvKiBibG9iIHRhYmxl
IGNvbHVtbiAqLwoJCQkJdmFyX2NvbnZlcnRfdHlwZSA6PSAnOjpPSUQnOwkJ
CQoJCQlFTFNFCgkJCS8qIGNvbXB1dGUgY29sdW1uICovCgkJCQlJRiAoVVBQ
RVIoY29sX25hbWVzW3Zhcl9hcnJheV9yb3ddKSA9IFVQUEVSKGV4cHJfY29u
dGVudHNbdmFyX2FycmF5X3Jvd10pIEFORCB2YXJfY29udmVydF90eXBlIElO
ICgnQkxPQicsJ0NMT0InKSkgVEhFTgoJCQkJLyogb3JpZ25hbCBjYXB0dXJl
ICovCgkJCQkJdmFyX2NvbnZlcnRfdHlwZSA6PSAnOjpPSUQnOwoJCQkJRUxT
RQoJCQkJCXZhcl9jb252ZXJ0X3R5cGUgOj0gJyc7CgkJCQlFTkQgSUY7CQkJ
CQoJCQlFTkQgSUY7CQoJCQkKCQkJLyogZXhjbHVkZSBMT0Isb25seSBub3Jt
YWwgY29sdW1uIGFuZCBjb21wdXRlIGNvbHVtbiAKCQkJSUYgTk9UICh2YXJf
Y29udmVydF90eXBlID0gJzo6T0lEJyBBTkQgSXNOdWxsKExFTkdUSChleHBy
X2NvbnRlbnRzW3Zhcl9hcnJheV9yb3ddKSwwKSA9IDApIFRIRU4KCQkJKi8J
CgkJCXZhcl9pc0tleUNvbHVtbiA6PSBEQk1TX0dEQUVDREMuZl9pc0tleUNv
bHVtbihEQk1TX0dEQUVDREMuZl9nZXRUYWJsZU9JRCh2YXJfc2NoZW1hbmFt
ZV90bXAsdmFyX3RhYmxlbmFtZV90bXApLGNvbF9uYW1lc1t2YXJfYXJyYXlf
cm93XSk7CgkJCXZhcl9jcmVhdGVUcmlnZ2VyIDo9IHZhcl9jcmVhdGVUcmln
Z2VyIAoJCQkJfHxDSFIoMTMpfHwgJyAgICAgICAgICAgICBJRiAoJ3x8KENB
U0UgV0hFTiB2YXJfaXNLZXlDb2x1bW4gVEhFTiAnTk9UIHZhcl9pc0tleUNv
bHVtblVwZGF0ZWQnIEVMU0UgJ05PVCB2YXJfaXNDaGFuZ2VkJyBFTkQpfHwn
KSBUSEVOICAgICcKCQkJCXx8Q0hSKDEzKXx8ICcgICAgICAgICAgICAgICAg
IElGIE5PVCAoJ3x8dmFyX2NtcGZ1bmN0aW9ufHwnKCgnfHx2YXJfY29tcGFy
ZVZhbF9uZXd8fCcpJ3x8dmFyX2NvbnZlcnRfdHlwZXx8JywoJ3x8dmFyX2Nv
bXBhcmVWYWxfb2xkfHwnKSd8fHZhcl9jb252ZXJ0X3R5cGV8fCcpKSBUSEVO
ICcKCQkJCXx8Q0hSKDEzKXx8ICcgICAgICAgICAgICAgICAgICAgICB2YXJf
aXNDaGFuZ2VkIDo9IFRSVUU7ICc7CgkJCS8qIEtleUNvbHVtbiB1cGRhdGVk
ICovCgkJCUlGICh2YXJfaXNLZXlDb2x1bW4pIFRIRU4KCQkJdmFyX2NyZWF0
ZVRyaWdnZXIgOj0gdmFyX2NyZWF0ZVRyaWdnZXIKCQkJCXx8Q0hSKDEzKXx8
ICcgICAgICAgICAgICAgICAgICAgICB2YXJfaXNLZXlDb2x1bW5VcGRhdGVk
IDo9IFRSVUU7JzsKCQkJRU5EIElGOwoJCQl2YXJfY3JlYXRlVHJpZ2dlciA6
PSB2YXJfY3JlYXRlVHJpZ2dlcgoJCQkJfHxDSFIoMTMpfHwgJyAgICAgICAg
ICAgICAgICAgRU5EIElGOyAnCgkJCQl8fENIUigxMyl8fCAnICAgICAgICAg
ICAgIEVORCBJRjsgJzsKCQkJLyoJCQoJCQlFTkQgSUY7CgkJCSovCgkJCQkK
CQkKCQkJdmFyX2FycmF5X3JvdyA6PSB2YXJfYXJyYXlfcm93ICsgMTsKCQlF
TkQgTE9PUDsKCQkJdmFyX2NyZWF0ZVRyaWdnZXIgOj0gdmFyX2NyZWF0ZVRy
aWdnZXIgCgkJCQl8fENIUigxMyl8fCAnICAgICBFTFNFICcKCQkJCXx8Q0hS
KDEzKXx8ICcgICAgICAgICB2YXJfaXNDaGFuZ2VkIDo9IFRSVUU7ICcKCQkJ
CXx8Q0hSKDEzKXx8ICcgICAgIEVORCBJRjsgJzsKCSAKCQl2YXJfY3JlYXRl
VHJpZ2dlciA6PSB2YXJfY3JlYXRlVHJpZ2dlciB8fCBDSFIoMTMpCgkJCQkg
IHx8Q0hSKDEzKXx8ICcgICAgIElGICggdmFyX2lzQ2FwdHVyZWQgQU5EIHZh
cl9pc0NoYW5nZWQgKSBUSEVOICcKCQkJCSAgfHxDSFIoMTMpfHwgJyAgICAg
ICAgIHZhcl9vcmRlciA6PSAnIHx8IHZhcl9zZXFfbmV4dCB8fCc7JwoJCQkJ
ICB8fENIUigxMyl8fCAnICAgICAgICAgSUYgKCB2YXJfaXNLZXlDb2x1bW5V
cGRhdGVkICkgVEhFTiAnCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAgICAgICAg
ICAgdmFyX29yZGVyMiA6PSAnIHx8IHZhcl9zZXFfbmV4dCB8fCc7JwoJCQkJ
ICB8fENIUigxMyl8fCAnICAgICAgICAgRU5EIElGOycKCQkJCSAgfHxDSFIo
MTMpfHwgJyAgICAgRU5EIElGOyc7CgkJSUYgKElzTnVsbChMRU5HVEgodGFi
bGVfbmFtZV9ibG9iKSwwKSA+IDApIFRIRU4KCQkJdmFyX3RhYl9oYXNCbG9i
IDo9ICdZJzsKCQkJCgkJCS8qIExvYiBpbnNlcnQgKi8KCQkJdmFyX2NyZWF0
ZVRyaWdnZXIgOj0gdmFyX2NyZWF0ZVRyaWdnZXIgfHwgQ0hSKDEzKQoJCQkJ
CSAgfHxDSFIoMTMpfHwnICAgICBJRiAoVEdfT1AgPSAnJ0lOU0VSVCcnKSBB
TkQgKCB2YXJfaXNDYXB0dXJlZCApIFRIRU4gJzsJICAgICAgICAgIAoJCQl2
YXJfYXJyYXlfcm93IDo9IDE7CgkJCUxPT1AgICAgCgkJCQlJRiAodmFyX2Fy
cmF5X3JvdyA+IHZhcl9uYW1lc19zaXplKSBUSEVOCgkJCQkJRVhJVDsKCQkJ
CUVORCBJRjsKCQkJCUlGIChJc051bGwoTEVOR1RIKGV4cHJfY29udGVudHNb
dmFyX2FycmF5X3Jvd10pLDApID0gMCkgVEhFTgoJCQkJCXZhcl9jb252ZXJ0
X3R5cGUgOj0gREJNU19HREFFQ0RDLmZfZ2V0Rm9ybWF0VHlwZShEQk1TX0dE
QUVDREMuZl9nZXRUYWJsZU9JRChzcmNfc2NoZW1hX25hbWUsc3JjX3RhYmxl
X25hbWUpLGNvbF9uYW1lc1t2YXJfYXJyYXlfcm93XSk7CQkJCgkJCQkJSUYg
KHZhcl9jb252ZXJ0X3R5cGUgSU4gKCdCTE9CJywnQ0xPQicpKSBUSEVOCgkJ
CQkJCXZhcl9jcmVhdGVUcmlnZ2VyIDo9IHZhcl9jcmVhdGVUcmlnZ2VyCgkJ
CQkJCXx8Q0hSKDEzKXx8ICcJSUYgKE5FVy4iJ3x8Y29sX25hbWVzW3Zhcl9h
cnJheV9yb3ddfHwnIiBJUyBOT1QgTlVMTCkgVEhFTiAnCgkJCQkJCXx8Q0hS
KDEzKXx8ICcgICAgICAgICAgICAgdmFyX2luc2VydFRhYmxlQmxvYiA6PSB2
YXJfaW5zZXJ0VGFibGVCbG9ifHwnJyBVTklPTiBBTEwgU0VMRUNUICcnfHxU
T19DSEFSKHZhcl9vcmRlcil8fCcnLCcnJycnfHxjb2xfbmFtZXNbdmFyX2Fy
cmF5X3Jvd118fCcnJycnLCcnfHxUT19DSEFSKE5FVy5PSUQ6OkJJR0lOVCk7
JwoJCQkJCQl8fENIUigxMyl8fCAnICAgICAgICAgICAgIHZhcl9pc0Jsb2JS
ZWNvcmRlZCA6PSBUUlVFOycKCQkJCQkJfHxDSFIoMTMpfHwgJwlFTkQgSUY7
ICc7CgkJCQkJRU5EIElGOwoJCQkJRU5EIElGOwoJCQkJdmFyX2FycmF5X3Jv
dyA6PSB2YXJfYXJyYXlfcm93ICsgMTsKCQkJRU5EIExPT1A7CgkJCXZhcl9j
cmVhdGVUcmlnZ2VyIDo9IHZhcl9jcmVhdGVUcmlnZ2VyIAoJCQkJCSAgfHxD
SFIoMTMpfHwnICAgICBFTkQgSUY7ICc7CgkJCS8qIExvYiB1cGRhdGUgKi8J
CQoJCQl2YXJfY3JlYXRlVHJpZ2dlciA6PSB2YXJfY3JlYXRlVHJpZ2dlciB8
fCBDSFIoMTMpCgkJCQkJICB8fENIUigxMyl8fCcgICAgIElGIChUR19PUCA9
ICcnVVBEQVRFJycpIEFORCAoIHZhcl9pc0NhcHR1cmVkICkgVEhFTiAnOwkg
ICAgICAgICAgCgkJCXZhcl9hcnJheV9yb3cgOj0gMTsKCQkJTE9PUCAgICAK
CQkJCUlGICh2YXJfYXJyYXlfcm93ID4gdmFyX25hbWVzX3NpemUpIFRIRU4K
CQkJCQlFWElUOwoJCQkJRU5EIElGOwoJCQkJCgkJCQlJRiAoSXNOdWxsKExF
TkdUSChleHByX2NvbnRlbnRzW3Zhcl9hcnJheV9yb3ddKSwwKSA9IDApIFRI
RU4KCQkJCQl2YXJfY29udmVydF90eXBlIDo9IERCTVNfR0RBRUNEQy5mX2dl
dEZvcm1hdFR5cGUoREJNU19HREFFQ0RDLmZfZ2V0VGFibGVPSUQoc3JjX3Nj
aGVtYV9uYW1lLHNyY190YWJsZV9uYW1lKSxjb2xfbmFtZXNbdmFyX2FycmF5
X3Jvd10pOwkJCQoJCQkJCUlGICh2YXJfY29udmVydF90eXBlIElOICgnQkxP
QicsJ0NMT0InKSkgVEhFTgoJCQkJLyoJKi8JdmFyX2NyZWF0ZVRyaWdnZXIg
Oj0gdmFyX2NyZWF0ZVRyaWdnZXIKCQkJCQkJfHxDSFIoMTMpfHwgJwlJRiBO
T1QgKERCTVNfR0RBRUNEQy5mX2NvbXBhcmVWYWx1ZXMoTkVXLiInfHxjb2xf
bmFtZXNbdmFyX2FycmF5X3Jvd118fCciOjpPSUQsT0xELiInfHxjb2xfbmFt
ZXNbdmFyX2FycmF5X3Jvd118fCciOjpPSUQpKSBUSEVOICcKCQkJCQkJfHxD
SFIoMTMpfHwgJwkgICAgSUYgKHZhcl9pc0tleUNvbHVtblVwZGF0ZWQpIFRI
RU4gJyAKCQkJCQkJfHxDSFIoMTMpfHwgJwkgICAgICAgIHZhcl9pbnNlcnRU
YWJsZUJsb2IgOj0gdmFyX2luc2VydFRhYmxlQmxvYnx8JycgVU5JT04gQUxM
IFNFTEVDVCAnJ3x8VE9fQ0hBUih2YXJfb3JkZXIpfHwnJywnJycnJ3x8Y29s
X25hbWVzW3Zhcl9hcnJheV9yb3ddfHwnJycnJywnJ3x8VE9fQ0hBUihPTEQu
T0lEOjpCSUdJTlQpOycKCQkJCQkJfHxDSFIoMTMpfHwgJwkgICAgICAgIHZh
cl9pbnNlcnRUYWJsZUJsb2IgOj0gdmFyX2luc2VydFRhYmxlQmxvYnx8Jycg
VU5JT04gQUxMIFNFTEVDVCAnJ3x8VE9fQ0hBUih2YXJfb3JkZXIyKXx8Jycs
JycnJyd8fGNvbF9uYW1lc1t2YXJfYXJyYXlfcm93XXx8JycnJycsJyd8fFRP
X0NIQVIoTkVXLk9JRDo6QklHSU5UKTsnCgkJCQkJCXx8Q0hSKDEzKXx8ICcJ
ICAgIEVMU0UgJwoJCQkJCQl8fENIUigxMyl8fCAnCSAgICAgICAgdmFyX2lu
c2VydFRhYmxlQmxvYiA6PSB2YXJfaW5zZXJ0VGFibGVCbG9ifHwnJyBVTklP
TiBBTEwgU0VMRUNUICcnfHxUT19DSEFSKHZhcl9vcmRlcil8fCcnLCcnJycn
fHxjb2xfbmFtZXNbdmFyX2FycmF5X3Jvd118fCcnJycnLCcnfHxUT19DSEFS
KE5FVy5PSUQ6OkJJR0lOVCk7JwoJCQkJCQl8fENIUigxMyl8fCAnCSAgICBF
TkQgSUY7ICcKCQkJCQkJfHxDSFIoMTMpfHwgJyAgICAgICB2YXJfaXNCbG9i
UmVjb3JkZWQgOj0gVFJVRTsgJwoJCQkJCQl8fENIUigxMyl8fCAnCUVORCBJ
RjsgJzsKCQkJCQlFTkQgSUY7IAoJCQkJCgkJCQlFTkQgSUY7CgkJCQkKCQkJ
CXZhcl9hcnJheV9yb3cgOj0gdmFyX2FycmF5X3JvdyArIDE7CgkJCUVORCBM
T09QOwoJCQl2YXJfY3JlYXRlVHJpZ2dlciA6PSB2YXJfY3JlYXRlVHJpZ2dl
ciAKCQkJCQkgIHx8Q0hSKDEzKXx8JyAgICAgRU5EIElGOyAnOwoJCQkJCSAg
CgkJCS8qIExvYiBkZWxldGUgKi8KCQkJdmFyX2NyZWF0ZVRyaWdnZXIgOj0g
dmFyX2NyZWF0ZVRyaWdnZXIgfHwgQ0hSKDEzKQoJCQkJCSAgfHxDSFIoMTMp
fHwnICAgICBJRiAoVEdfT1AgPSAnJ0RFTEVURScnKSBBTkQgKCB2YXJfaXND
YXB0dXJlZCApIFRIRU4gJzsJICAgICAgICAgIAoJCQl2YXJfYXJyYXlfcm93
IDo9IDE7CgkJCUxPT1AgICAgCgkJCQlJRiAodmFyX2FycmF5X3JvdyA+IHZh
cl9uYW1lc19zaXplKSBUSEVOCgkJCQkJRVhJVDsKCQkJCUVORCBJRjsKCQkJ
CUlGIChJc051bGwoTEVOR1RIKGV4cHJfY29udGVudHNbdmFyX2FycmF5X3Jv
d10pLDApID0gMCkgVEhFTgoJCQkJCXZhcl9jb252ZXJ0X3R5cGUgOj0gREJN
U19HREFFQ0RDLmZfZ2V0Rm9ybWF0VHlwZShEQk1TX0dEQUVDREMuZl9nZXRU
YWJsZU9JRChzcmNfc2NoZW1hX25hbWUsc3JjX3RhYmxlX25hbWUpLGNvbF9u
YW1lc1t2YXJfYXJyYXlfcm93XSk7CQkJCgkJCQkJSUYgKHZhcl9jb252ZXJ0
X3R5cGUgSU4gKCdCTE9CJywnQ0xPQicpKSBUSEVOCgkJCQkJCXZhcl9jcmVh
dGVUcmlnZ2VyIDo9IHZhcl9jcmVhdGVUcmlnZ2VyCgkJCQkJCXx8Q0hSKDEz
KXx8ICcJSUYgKE9MRC4iJ3x8Y29sX25hbWVzW3Zhcl9hcnJheV9yb3ddfHwn
IiBJUyBOT1QgTlVMTCkgVEhFTiAnCgkJCQkJCXx8Q0hSKDEzKXx8ICcgICAg
ICAgICAgICAgdmFyX2luc2VydFRhYmxlQmxvYiA6PSB2YXJfaW5zZXJ0VGFi
bGVCbG9ifHwnJyBVTklPTiBBTEwgU0VMRUNUICcnfHxUT19DSEFSKHZhcl9v
cmRlcil8fCcnLCcnJycnfHxjb2xfbmFtZXNbdmFyX2FycmF5X3Jvd118fCcn
JycnLCcnfHxUT19DSEFSKE9MRC5PSUQ6OkJJR0lOVCk7JwoJCQkJCQl8fENI
UigxMyl8fCAnICAgICAgICAgICAgIHZhcl9pc0Jsb2JSZWNvcmRlZCA6PSBU
UlVFOycKCQkJCQkJfHxDSFIoMTMpfHwgJwlFTkQgSUY7ICc7CgkJCQkJRU5E
IElGOwoJCQkJRU5EIElGOwoJCQkJdmFyX2FycmF5X3JvdyA6PSB2YXJfYXJy
YXlfcm93ICsgMTsKCQkJRU5EIExPT1A7CgkJCXZhcl9jcmVhdGVUcmlnZ2Vy
IDo9IHZhcl9jcmVhdGVUcmlnZ2VyIAoJCQkJCSAgfHxDSFIoMTMpfHwnICAg
ICBFTkQgSUY7ICc7CgkJRU5EIElGOwoJCS8qCgkJLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0gCgkJTEVGVChUR19PUCwxKSAtPiBPUF9UWVBFCgkJLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCQknSScgLT4gICdJTlNFUlQnIAoJ
CSdVJyAtPiAgJ1VQREFURScKCQknRCcgLT4gICdERUxFVEUnCgkJaWYga2V5
IGNvbHVtbiBpcyB1cGRhdGVkIHRoZW4KCQkJZGVsZXRlCgkJCWluc2VydAoJ
CWVuZCBpZjsKCQktLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJCSovCgkJ
dmFyX3RhYmxlX2NvbHVtbnNfdmFsdWVfaW5zZXJ0IDo9ICd2YXJfb3JkZXIs
JydJJycsJycnfHx2YXJfdGFiX2hhc0Jsb2J8fCcnJyd8fChDQVNFIFdIRU4g
KGlzUm93SUQgPSBUUlVFKSBUSEVOICcsTkVXLk9JRCcgRUxTRSAnJyBFTkQp
fHwnLE5VTEwnOwkJCQoJCXZhcl90YWJsZV9jb2x1bW5zX3ZhbHVlX3VwZGF0
ZSA6PSAndmFyX29yZGVyLCcnVScnLCcnJ3x8dmFyX3RhYl9oYXNCbG9ifHwn
JycnfHwoQ0FTRSBXSEVOIChpc1Jvd0lEID0gVFJVRSkgVEhFTiAnLE5FVy5P
SUQnIEVMU0UgJycgRU5EKXx8JyxOVUxMJzsJCQkKCQl2YXJfdGFibGVfY29s
dW1uc192YWx1ZV9kZWxldGUgOj0gJ3Zhcl9vcmRlciwnJ0QnJywnJyd8fHZh
cl90YWJfaGFzQmxvYnx8JycnJ3x8KENBU0UgV0hFTiAoaXNSb3dJRCA9IFRS
VUUpIFRIRU4gJyxPTEQuT0lEJyBFTFNFICcnIEVORCl8fCcsTlVMTCc7CQoJ
CXZhcl90YWJsZV9jb2x1bW5zX3ZhbHVlX2luc2VydF9rZXl1cGRhdGVkIDo9
ICd2YXJfb3JkZXIyLCcnSScnLCcnJ3x8dmFyX3RhYl9oYXNCbG9ifHwnJycn
fHwoQ0FTRSBXSEVOIChpc1Jvd0lEID0gVFJVRSkgVEhFTiAnLE5FVy5PSUQn
IEVMU0UgJycgRU5EKXx8JyxOVUxMJzsJCiAgICAgICAgdmFyX3RhYmxlX2Nv
bHVtbnMgOj0gREJNU19HREFFQ0RDLmZfZ2V0U3ViVGFibGVJbmZvKDMsaXNS
b3dJRCk7ICAgICAKCQl2YXJfYXJyYXlfcm93IDo9IDE7CgkJTE9PUAoJCQlJ
RiAodmFyX2FycmF5X3JvdyA+IHZhcl9uYW1lc19zaXplKSBUSEVOCgkJCQkJ
ICBFWElUOwoJCQlFTkQgSUY7CgkJCQoJCQlJRiAoSXNOdWxsKExFTkdUSChl
eHByX2NvbnRlbnRzW3Zhcl9hcnJheV9yb3ddKSwwKSA+IDApIFRIRU4gLyog
Y29tcHV0ZSBjb2x1bW4gKi8KCQkJCXZhcl90YWJsZV9jb2x1bW5zIDo9IHZh
cl90YWJsZV9jb2x1bW5zfHwnLCInfHxjb2xfbmFtZXNbdmFyX2FycmF5X3Jv
d118fCciJzsKCQkJCXZhcl90YWJsZV9jb2x1bW5zX3ZhbHVlX2luc2VydCA6
PSB2YXJfdGFibGVfY29sdW1uc192YWx1ZV9pbnNlcnR8fCcsKFNFTEVDVCAn
fHxleHByX2NvbnRlbnRzW3Zhcl9hcnJheV9yb3ddfHwnIEZST00gJ3x8dmFy
X25ld3x8JyknOwkJICAgICAgCgkJCQl2YXJfdGFibGVfY29sdW1uc192YWx1
ZV91cGRhdGUgOj0gdmFyX3RhYmxlX2NvbHVtbnNfdmFsdWVfdXBkYXRlfHwn
LChTRUxFQ1QgJ3x8ZXhwcl9jb250ZW50c1t2YXJfYXJyYXlfcm93XXx8JyBG
Uk9NICd8fHZhcl9uZXd8fCcpJzsJCSAgICAgIAoJCQkJdmFyX3RhYmxlX2Nv
bHVtbnNfdmFsdWVfZGVsZXRlIDo9IHZhcl90YWJsZV9jb2x1bW5zX3ZhbHVl
X2RlbGV0ZXx8JywoU0VMRUNUICd8fGV4cHJfY29udGVudHNbdmFyX2FycmF5
X3Jvd118fCcgRlJPTSAnfHx2YXJfb2xkfHwnKSc7CgkJCQl2YXJfdGFibGVf
Y29sdW1uc192YWx1ZV9pbnNlcnRfa2V5dXBkYXRlZCA6PSB2YXJfdGFibGVf
Y29sdW1uc192YWx1ZV9pbnNlcnRfa2V5dXBkYXRlZHx8JywoU0VMRUNUICd8
fGV4cHJfY29udGVudHNbdmFyX2FycmF5X3Jvd118fCcgRlJPTSAnfHx2YXJf
bmV3fHwnKSc7CgkJCUVMU0UgLyogbm9ybWFsIGNvbHVtbiAqLwoJCQkJCXZh
cl9jb252ZXJ0X3R5cGUgOj0gREJNU19HREFFQ0RDLmZfZ2V0Rm9ybWF0VHlw
ZShEQk1TX0dEQUVDREMuZl9nZXRUYWJsZU9JRChzcmNfc2NoZW1hX25hbWUs
c3JjX3RhYmxlX25hbWUpLGNvbF9uYW1lc1t2YXJfYXJyYXlfcm93XSk7CQkJ
CgkJCQkJSUYgKHZhcl9jb252ZXJ0X3R5cGUgTk9UIElOICgnQkxPQicsJ0NM
T0InKSkgVEhFTiAvKiBsb2Igbm90IGluY2x1ZGUgKi8JCgkJCQkJCXZhcl90
YWJsZV9jb2x1bW5zIDo9IHZhcl90YWJsZV9jb2x1bW5zfHwnLCInfHxjb2xf
bmFtZXNbdmFyX2FycmF5X3Jvd118fCciJzsJCgkJCQkJCXZhcl90YWJsZV9j
b2x1bW5zX3ZhbHVlX2luc2VydCA6PSB2YXJfdGFibGVfY29sdW1uc192YWx1
ZV9pbnNlcnR8fCcsTkVXLiInfHxjb2xfbmFtZXNbdmFyX2FycmF5X3Jvd118
fCciJzsJCSAgICAgIAoJCQkJCQl2YXJfdGFibGVfY29sdW1uc192YWx1ZV91
cGRhdGUgOj0gdmFyX3RhYmxlX2NvbHVtbnNfdmFsdWVfdXBkYXRlfHwnLE5F
Vy4iJ3x8Y29sX25hbWVzW3Zhcl9hcnJheV9yb3ddfHwnIic7CgkJCQkJCXZh
cl90YWJsZV9jb2x1bW5zX3ZhbHVlX2RlbGV0ZSA6PSB2YXJfdGFibGVfY29s
dW1uc192YWx1ZV9kZWxldGV8fCcsT0xELiInfHxjb2xfbmFtZXNbdmFyX2Fy
cmF5X3Jvd118fCciJzsKCQkJCQkJdmFyX3RhYmxlX2NvbHVtbnNfdmFsdWVf
aW5zZXJ0X2tleXVwZGF0ZWQgOj0gdmFyX3RhYmxlX2NvbHVtbnNfdmFsdWVf
aW5zZXJ0X2tleXVwZGF0ZWR8fCcsTkVXLiInfHxjb2xfbmFtZXNbdmFyX2Fy
cmF5X3Jvd118fCciJzsKCQkJCQlFTkQgSUY7CgkJCUVORCBJRjsJICAgIAoJ
CQkgICAgICAKCQkJdmFyX2FycmF5X3JvdyA6PSB2YXJfYXJyYXlfcm93ICsg
MTsKCQlFTkQgTE9PUDsKCQl2YXJfY3JlYXRlVHJpZ2dlciA6PSB2YXJfY3Jl
YXRlVHJpZ2dlciB8fCBDSFIoMTMpCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAg
IElGICggdmFyX2lzQ2FwdHVyZWQgQU5EIHZhcl9pc0NoYW5nZWQgKSBUSEVO
ICcKCQkJCSAgfHxDSFIoMTMpfHwgJyAgICAgICAgIElGIChUR19PUCA9ICcn
SU5TRVJUJycpIFRIRU4gJwoJCQkJICB8fENIUigxMyl8fCAnICAgICAgICAg
ICAgIElOU0VSVCBJTlRPICd8fCB2YXJfZGVzX3RhYmxlIHx8JygnfHwgdmFy
X3RhYmxlX2NvbHVtbnMgfHwnKScKCQkJCSAgfHxDSFIoMTMpfHwgJyAgICAg
ICAgICAgICBWQUxVRVMoICd8fHZhcl90YWJsZV9jb2x1bW5zX3ZhbHVlX2lu
c2VydHx8Jyk7JwoJCQkJICB8fENIUigxMyl8fCAnICAgICAgICAgICAgIElG
ICggdmFyX2lzQmxvYlJlY29yZGVkICkgVEhFTiAnCgkJCQkgIHx8Q0hSKDEz
KXx8ICcgICAgICAgICAgICAgICAgIEVYRUNVVEUgSU1NRURJQVRFIHZhcl9p
bnNlcnRUYWJsZUJsb2I7JwoJCQkJICB8fENIUigxMyl8fCAnICAgICAgICAg
ICAgIEVORCBJRjsgJwoJCQkJICB8fENIUigxMyl8fCAnICAgICAgICAgRU5E
IElGOyAnOwoJCXZhcl9jcmVhdGVUcmlnZ2VyIDo9IHZhcl9jcmVhdGVUcmln
Z2VyIHx8IENIUigxMykKCQkJCSAgfHxDSFIoMTMpfHwgJyAgICAgICAgIElG
IChUR19PUCA9ICcnVVBEQVRFJycpIFRIRU4gJwoJCQkJICB8fENIUigxMyl8
fCAnICAgICAgICAgICAgIElGICggTk9UIHZhcl9pc0tleUNvbHVtblVwZGF0
ZWQgKSBUSEVOICcKCQkJCSAgfHxDSFIoMTMpfHwgJyAgICAgICAgICAgICAg
ICAgSU5TRVJUIElOVE8gJ3x8IHZhcl9kZXNfdGFibGUgfHwnKCd8fCB2YXJf
dGFibGVfY29sdW1ucyB8fCcpJwoJCQkJICB8fENIUigxMyl8fCAnICAgICAg
ICAgICAgICAgICBWQUxVRVMoICd8fHZhcl90YWJsZV9jb2x1bW5zX3ZhbHVl
X3VwZGF0ZXx8Jyk7JwoJCQkJICB8fENIUigxMyl8fCAnICAgICAgICAgICAg
IEVMU0UgJwoJCQkJICB8fENIUigxMyl8fCAnICAgICAgICAgICAgICAgICBJ
TlNFUlQgSU5UTyAnfHwgdmFyX2Rlc190YWJsZSB8fCcoJ3x8IHZhcl90YWJs
ZV9jb2x1bW5zIHx8JyknCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAgICAgICAg
ICAgICAgIFZBTFVFUyggJ3x8dmFyX3RhYmxlX2NvbHVtbnNfdmFsdWVfZGVs
ZXRlfHwnKTsnCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAgICAgICAgICAgICAg
IElOU0VSVCBJTlRPICd8fCB2YXJfZGVzX3RhYmxlIHx8JygnfHwgdmFyX3Rh
YmxlX2NvbHVtbnMgfHwnKScKCQkJCSAgfHxDSFIoMTMpfHwgJyAgICAgICAg
ICAgICAgICAgVkFMVUVTKCAnfHx2YXJfdGFibGVfY29sdW1uc192YWx1ZV9p
bnNlcnRfa2V5dXBkYXRlZHx8Jyk7JwoJCQkJICB8fENIUigxMyl8fCAnICAg
ICAgICAgICAgIEVORCBJRjsnCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAgICAg
ICAgICAgSUYgKCB2YXJfaXNCbG9iUmVjb3JkZWQgKSBUSEVOICcKCQkJCSAg
fHxDSFIoMTMpfHwgJyAgICAgICAgICAgICAgICAgRVhFQ1VURSBJTU1FRElB
VEUgdmFyX2luc2VydFRhYmxlQmxvYjsnCgkJCQkgIHx8Q0hSKDEzKXx8ICcg
ICAgICAgICAgICAgRU5EIElGOyAnCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAg
ICAgICBFTkQgSUY7ICc7CQkgIAoJCXZhcl9jcmVhdGVUcmlnZ2VyIDo9IHZh
cl9jcmVhdGVUcmlnZ2VyIHx8IENIUigxMykKCQkJCSAgfHxDSFIoMTMpfHwg
JyAgICAgICAgIElGIChUR19PUCA9ICcnREVMRVRFJycpIFRIRU4gJwoJCQkJ
ICB8fENIUigxMyl8fCAnICAgICAgICAgICAgIElOU0VSVCBJTlRPICd8fCB2
YXJfZGVzX3RhYmxlIHx8JygnfHwgdmFyX3RhYmxlX2NvbHVtbnMgfHwnKScK
CQkJCSAgfHxDSFIoMTMpfHwgJyAgICAgICAgICAgICBWQUxVRVMoICd8fHZh
cl90YWJsZV9jb2x1bW5zX3ZhbHVlX2RlbGV0ZXx8Jyk7JwoJCQkJICB8fENI
UigxMyl8fCAnICAgICAgICAgICAgIElGICggdmFyX2lzQmxvYlJlY29yZGVk
ICkgVEhFTiAnCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAgICAgICAgICAgICAg
IEVYRUNVVEUgSU1NRURJQVRFIHZhcl9pbnNlcnRUYWJsZUJsb2I7JwoJCQkJ
ICB8fENIUigxMyl8fCAnICAgICAgICAgICAgIEVORCBJRjsgJwoJCQkJICB8
fENIUigxMyl8fCAnICAgICAgICAgRU5EIElGOyAnOwoJCXZhcl9jcmVhdGVU
cmlnZ2VyIDo9IHZhcl9jcmVhdGVUcmlnZ2VyIHx8IENIUigxMykgICAgICAg
IAoJCQkJICB8fENIUigxMyl8fCAnICAgICBFTkQgSUY7ICc7CgkJdmFyX2Ny
ZWF0ZVRyaWdnZXIgOj0gdmFyX2NyZWF0ZVRyaWdnZXIgCgkJCQkgIHx8Q0hS
KDEzKXx8ICcgICAgIEVYQ0VQVElPTiBXSEVOIE9USEVSUyBUSEVOICcKCQkJ
CSAgfHxDSFIoMTMpfHwgJyAgICAgQkVHSU4gJwoJCQkJICB8fENIUigxMyl8
fCAnICAgICAJREJNU19HREFFQ0RDLmZfcmFpc2VHZGFlRXJyb3IoJydbQ2Fw
dHVyZVRyaWdnZXJFcnJvcl0nJ3x8REJNU19HREFFQ0RDLmZfZ2V0U3FsZXJy
bSgpKTsnCgkJCQkgIHx8Q0hSKDEzKXx8ICcgICAgIEVORDsgJzsKCQl2YXJf
Y3JlYXRlVHJpZ2dlciA6PSB2YXJfY3JlYXRlVHJpZ2dlciAKCQkJfHxDSFIo
MTMpfHwgJyBFTkQgJzsKCQlCRUdJTgoJCQlFWEVDVVRFIElNTUVESUFURSB2
YXJfY3JlYXRlVHJpZ2dlcjsKCQkJRVhDRVBUSU9OIFdIRU4gT1RIRVJTIFRI
RU4KCQkJQkVHSU4KCQkJCXZhcl9yZXQgOj0gJ2ZhaWxlZCB0byBjcmVhdGUg
Y2FwdHVyZSB0cmlnZ2VyLCd8fERCTVNfR0RBRUNEQy5mX2dldFNxbGVycm0o
KTsJCQkJCgkJCQlSQUlTRSBOT1RJQ0UgJ1tDYXB0dXJlVHJpZ2dlclN5bnRh
eF0gJScsdmFyX2NyZWF0ZVRyaWdnZXI7CgkJCQlEQk1TX0dEQUVDREMuZl9y
YWlzZUdkYWVFcnJvcih2YXJfcmV0KTsKCQkJCVJFVFVSTiB2YXJfcmV0OwoJ
CQlFTkQ7CgkJRU5EOwoJCVJFVFVSTiB2YXJfcmV0OwoJRU5EOwoJLyoKCWNy
ZWF0ZUNhcHR1cmVUYWJsZSBGb3IgR0RBRSBDREMKCSovCglGVU5DVElPTiBH
REFFY3JlYXRlQ2FwdHVyZVRhYmxlKAoJc3JjX3NjaGVtYV9uYW1lIFZBUkNI
QVIoMjAwKSwKCXNyY190YWJsZV9uYW1lIFZBUkNIQVIoMjAwKSwKCWNhcHR1
cmVkX2NvbmRpdGlvbnMgVkFSQ0hBUigyMDApLAoJaXNSb3dJRAkJQk9PTEVB
TiwKCWNvbF9uYW1lc19zdHIgVEVYVCwKCWV4cHJfdHlwZXNfc3RyIFRFWFQs
CglleHByX2NvbnRlbnRzX3N0ciBURVhULAoJT1VUIHRhYmxlX25hbWUgVkFS
Q0hBUigyMDApLAoJT1VUIHRhYmxlX25hbWVfbGVuIElOVCwKCU9VVCB0YWJs
ZV9uYW1lX2Jsb2IgVkFSQ0hBUigyMDApLAoJT1VUIHRhYmxlX25hbWVfYmxv
Yl9sZW4gSU5UIAoJKQoJCVJFVFVSTlMgVkFSQ0hBUigyMDApIC8qIHN1Y2Nl
c3NzICcnIGVsc2UgZXJyb3IgbWVzc2FnZSAqLwoJQVMKCURFQ0xBUkUKCXZh
cl9yZXQgVkFSQ0hBUigyMDApIDo9Jyc7Cgl0YWJsZV90cmlnZ2VycyBWQVJD
SEFSKDIwMClbXTsKCWRlYnVnX2ZsYWcgSU5UIDo9IDA7CgljdXJfZ2V0VGFi
bGVOYW1lIFJFRkNVUlNPUjsKCWN1cl9nZXRTdWJJbmZvIFJFRkNVUlNPUjsK
CWNvbF9uYW1lcyBWQVJDSEFSKDIwMClbXTsKCWV4cHJfdHlwZXMgVkFSQ0hB
UigyMDApW107CglleHByX2NvbnRlbnRzIFZBUkNIQVIoMjAwKVtdOwoJQkVH
SU4KCQkvKiBjcmVhdGUgY2FwdHVyZV9jb25maWcgaWYgaXQgZG9lc24ndCBl
eGlzdC4gKi8KCQlwZXJmb3JtIERCTVNfR0RBRUNEQy5mX2NyZWF0ZUNhcHR1
cmVDb25maWcoKTsKCQkvKiBzdHJpbmdfdG9fYXJyYXkgIn5efiIiICovCgkJ
Y29sX25hbWVzIDo9IHN0cmluZ190b19hcnJheShjb2xfbmFtZXNfc3RyLCd+
Xn4nKTsKCQlleHByX3R5cGVzIDo9IHN0cmluZ190b19hcnJheShleHByX3R5
cGVzX3N0ciwnfl5+Jyk7CgkJZXhwcl9jb250ZW50cyA6PSBzdHJpbmdfdG9f
YXJyYXkoZXhwcl9jb250ZW50c19zdHIsJ35eficpOwoJCQoJCS8qIGdldCBz
dWJzY3JpcHRpb24gdGFibGUgbmFtZSxnbG9iYWwgdW5pcXVlICovCgkJT1BF
TiBjdXJfZ2V0VGFibGVOYW1lIAoJCUZPUiBTRUxFQ1QgKiBGUk9NIERCTVNf
R0RBRUNEQy5mX2dldFRhYmxlTmFtZShzcmNfc2NoZW1hX25hbWUsc3JjX3Rh
YmxlX25hbWUsY29sX25hbWVzLGV4cHJfdHlwZXMsZXhwcl9jb250ZW50cyxO
VUxMLE5VTEwpOwoJCUZFVENIIGN1cl9nZXRUYWJsZU5hbWUgSU5UTyB0YWJs
ZV9uYW1lLHRhYmxlX25hbWVfYmxvYix2YXJfcmV0OwoJCUNMT1NFIGN1cl9n
ZXRUYWJsZU5hbWU7CgkJSUYgSXNOdWxsKExFTkdUSCh2YXJfcmV0KSwwKSA+
IDAgVEhFTgoJCQlJRiAoZGVidWdfZmxhZz0xKSBUSEVOCgkJCQlSQUlTRSBO
T1RJQ0UgJ0Vycm9yIGdldFRhYmxlTmFtZSAlJyx2YXJfcmV0OwoJCQlFTkQg
SUY7CgkJCURCTVNfR0RBRUNEQy5mX3JhaXNlR2RhZUVycm9yKCdmYWlsZWQg
dG8gZ2VuZXJhdGUgc3Vic2NyaXB0aW9uIHRhYmxlIG5hbWUnKTsKCQkJUkVU
VVJOIHZhcl9yZXQ7CgkJRU5EIElGOwoJCXRhYmxlX25hbWVfbGVuIDo9IE9D
VEVUX0xFTkdUSCh0YWJsZV9uYW1lKTsvKiAhISFsZW5ndGggaW4gYnl0ZSEh
ISAqLwoJCXRhYmxlX25hbWVfYmxvYl9sZW4gOj0gT0NURVRfTEVOR1RIKHRh
YmxlX25hbWVfYmxvYik7LyogISEhbGVuZ3RoIGluIGJ5dGUhISEgKi8KCQlJ
RiAoZGVidWdfZmxhZz0xKSBUSEVOCgkJCVJBSVNFIE5PVElDRSAnSW5mbyBn
ZXRUYWJsZU5hbWUsJSAlJyx0YWJsZV9uYW1lLHRhYmxlX25hbWVfYmxvYjsK
CQlFTkQgSUY7CgkJLyogY2hlY2sgY2FwdHVyZSBpbmZvICovCgkJdmFyX3Jl
dCA9IERCTVNfR0RBRUNEQy5mX2NoZWNrQ2FwdHVyZVRhYmxlcyhzcmNfc2No
ZW1hX25hbWUsc3JjX3RhYmxlX25hbWUsaXNSb3dJRCxjb2xfbmFtZXMsZXhw
cl90eXBlcyxleHByX2NvbnRlbnRzLGNhcHR1cmVkX2NvbmRpdGlvbnMpOwkK
CQlJRiBMRU5HVEgodmFyX3JldCkgPiAwIFRIRU4KCQkJSUYgKGRlYnVnX2Zs
YWc9MSkgVEhFTgoJCQkJUkFJU0UgTk9USUNFICdFcnJvciBmX2NoZWNrQ2Fw
dHVyZVRhYmxlcyAlJyx2YXJfcmV0OwoJCQlFTkQgSUY7CgkJCVJFVFVSTiB2
YXJfcmV0OwoJCUVORCBJRjsKCQkvKiBjcmVhdGUgc3Vic2NyaXB0aW9uIHRh
YmxlICovCgkJdmFyX3JldCA9IERCTVNfR0RBRUNEQy5mX2NyZWF0ZUNhcHR1
cmVUYWJsZXMoc3JjX3NjaGVtYV9uYW1lLHNyY190YWJsZV9uYW1lLGlzUm93
SUQsY29sX25hbWVzLGV4cHJfdHlwZXMsZXhwcl9jb250ZW50cyx0YWJsZV9u
YW1lLHRhYmxlX25hbWVfYmxvYik7CgkJSUYgTEVOR1RIKHZhcl9yZXQpID4g
MCBUSEVOCgkJCUlGIChkZWJ1Z19mbGFnPTEpIFRIRU4KCQkJCVJBSVNFIE5P
VElDRSAnRXJyb3IgZl9jcmVhdGVDYXB0dXJlVGFibGVzICUnLHZhcl9yZXQ7
CgkJCUVORCBJRjsKCQkJUkVUVVJOIHZhcl9yZXQ7CgkJRU5EIElGOwoJCS8q
IGNyZWF0ZSB0cmlnZ2VyIGZvciBjZGMgKi8KCSAgCVNFTEVDVCAqCgkgIAlJ
TlRPIHRhYmxlX3RyaWdnZXJzLCB2YXJfcmV0CgkgIAlGUk9NIERCTVNfR0RB
RUNEQy5mX2NyZWF0ZUNhcHR1cmVUcmlnZ2VycyhzcmNfc2NoZW1hX25hbWUs
c3JjX3RhYmxlX25hbWUsaXNSb3dJRCxjb2xfbmFtZXMsZXhwcl90eXBlcyxl
eHByX2NvbnRlbnRzLHNyY19zY2hlbWFfbmFtZSx0YWJsZV9uYW1lLHRhYmxl
X25hbWVfYmxvYixjYXB0dXJlZF9jb25kaXRpb25zLE5VTEwpOwoJCUlGIExF
TkdUSCh2YXJfcmV0KSA+IDAgVEhFTgoJCQlJRiAoZGVidWdfZmxhZz0xKSBU
SEVOCgkJCQlSQUlTRSBOT1RJQ0UgJ0Vycm9yIGZfY3JlYXRlQ2FwdHVyZVRy
aWdnZXJzICUnLHZhcl9yZXQ7CgkJCUVORCBJRjsKCQkJUkVUVVJOIHZhcl9y
ZXQ7CgkJRU5EIElGOwoJCS8qIHdyaXRlIGNhcHR1cmVfY29uZmlnICovCgkJ
dmFyX3JldCA9IERCTVNfR0RBRUNEQy5mX3dyaXRlQ2FwdHVyZUluZm8oc3Jj
X3NjaGVtYV9uYW1lLHNyY190YWJsZV9uYW1lLHNyY19zY2hlbWFfbmFtZSx0
YWJsZV9uYW1lLHRhYmxlX25hbWVfYmxvYix0YWJsZV90cmlnZ2Vycyk7CgkJ
SUYgTEVOR1RIKHZhcl9yZXQpID4gMCBUSEVOCgkJCUlGIChkZWJ1Z19mbGFn
PTEpIFRIRU4KCQkJCVJBSVNFIE5PVElDRSAnRXJyb3IgZl93cml0ZUNhcHR1
cmVJbmZvICUnLHZhcl9yZXQ7CgkJCUVORCBJRjsKCQkJUkVUVVJOIHZhcl9y
ZXQ7CgkJRUxTRQoJCQlJRiAoZGVidWdfZmxhZz0xKSBUSEVOCgkJCQlSQUlT
RSBOT1RJQ0UgJ0luZm8gZl93cml0ZUNhcHR1cmVJbmZvLCBzdWNjZXNzZnVs
IHRvIHJlY29yZCBjYXB0dXJlZCBzZXR0aW5ncyc7CgkJCUVORCBJRjsKCQlF
TkQgSUY7CgkJUkVUVVJOIHZhcl9yZXQ7CglFTkQ7ICAgIAoJLyoKCWRyb3Ag
Y2FwdHVyZSBpbmZvIGZvciBHREFFCgkqLwoJRlVOQ1RJT04gR0RBRWRyb3BD
YXB0dXJlVGFibGUoCgl0YWJsZV9uYW1lIFZBUkNIQVIoMjAwKSAvKiBzdWJz
Y3JpcHRpb24gdGFibGUgbmFtZSAqLwoJKQoJUkVUVVJOUyBWQVJDSEFSKDIw
MCkgLyogc3VjY2Vzc3MgJycgZWxzZSBlcnJvciBtZXNzYWdlICovCglBUwoJ
REVDTEFSRQoJdmFyX3NyY19zY2hlbWEgVkFSQ0hBUigyMDApOwoJdmFyX3Nj
aGVtYSBWQVJDSEFSKDIwMCk7Cgl2YXJfdGFibGUgVkFSQ0hBUigyMDApOwoJ
dmFyX3RhYmxlX2Jsb2IgVkFSQ0hBUigyMDApOwoJdmFyX3RyaWdnZXIgVkFS
Q0hBUigyMDApOwoJdmFyX3RhYl9vaWQgT0lEIDo9IDA7Cgl2YXJfY2RjX3Rh
YmxlX25hbWUgVkFSQ0hBUigyMDApIDo9IHRhYmxlX25hbWU7Cgl2YXJfc2Vx
bmFtZSBWQVJDSEFSKDIwMCk7Cgl2YXJfc3FsIFZBUkNIQVIoMjAwMCk7Cgl2
YXJfcmV0IFZBUkNIQVIoMjAwKTsKCUJFR0lOCgkJCgkJLyogY3JlYXRlIGNh
cHR1cmVfY29uZmlnIGlmIGl0IGRvZXNuJ3QgZXhpc3QuICovCgkJcGVyZm9y
bSBEQk1TX0dEQUVDREMuZl9jcmVhdGVDYXB0dXJlQ29uZmlnKCk7CgkJCgkJ
CgkJSUYgKElzTnVsbChMRU5HVEgodGFibGVfbmFtZSksMCkgPSAwKSBUSEVO
CgkJCXZhcl9yZXQgOj0gJ1RhYmxlIHRvIGJlIGRyb3BwZWQgaW52YWxpZCc7
CgkJCURCTVNfR0RBRUNEQy5mX3JhaXNlR2RhZUVycm9yKHZhcl9yZXQpOwoJ
CQlSRVRVUk4gdmFyX3JldDsKCQlFTkQgSUY7CgkJCgkJdmFyX3RhYl9vaWQg
Oj0gREJNU19HREFFQ0RDLmZfZ2V0VGFibGVPSUQoTlVMTCx0YWJsZV9uYW1l
KTsKCQlJRiAodmFyX3RhYl9vaWQgSVMgTlVMTCBPUiB2YXJfdGFiX29pZCA9
IDApIFRIRU4KCQkJdmFyX3JldCA6PSAnVGFibGUgJ3x8dGFibGVfbmFtZXx8
JyBkb2VzIG5vdCBleGlzdCc7CgkJCURCTVNfR0RBRUNEQy5mX3JhaXNlR2Rh
ZUVycm9yKHZhcl9yZXQpOwoJCQlSRVRVUk4gdmFyX3JldDsKCQlFTkQgSUY7
CgkJCgkJU0VMRUNUIENEQ19TUkNfU0NIRU1BX05BTUUsQ0RDX1NDSEVNQV9O
QU1FLENEQ19UQUJMRV9OQU1FLENEQ19UQUJMRV9OQU1FX0JMT0IsQ0RDX1RS
SUdHRVJfTkFNRSxDRENfU0VRVUVOQ0VfTkFNRQoJCUlOVE8gdmFyX3NyY19z
Y2hlbWEsdmFyX3NjaGVtYSx2YXJfdGFibGUsdmFyX3RhYmxlX2Jsb2IsdmFy
X3RyaWdnZXIsdmFyX3NlcW5hbWUKCQlGUk9NIFBVQkxJQy5DQVBUVVJFX0NP
TkZJRwoJCVdIRVJFIENEQ19UQUJMRV9OQU1FID0gdGFibGVfbmFtZTsKCQkK
CQlJRiAoSXNOdWxsKExFTkdUSCh2YXJfc3JjX3NjaGVtYSksMCkgPSAwKSBU
SEVOCgkJCXZhcl9yZXQgOj0gJ1N1YnNjcmlwdGlvbiBJbmZvIGNhbm5vdCBi
ZSBmb3VuZCwnfHx0YWJsZV9uYW1lOwoJCQlEQk1TX0dEQUVDREMuZl9yYWlz
ZUdkYWVFcnJvcih2YXJfcmV0KTsKCQkgCVJFVFVSTiB2YXJfcmV0OwoJCUVO
RCBJRjsKCQlJRiAoREJNU19HREFFQ0RDLmZfb2JqZWN0RXhpc3QodmFyX3Ry
aWdnZXIsJ1RSSUdHRVInLHZhcl9zcmNfc2NoZW1hKSkgVEhFTgogICAgCQl2
YXJfc3FsIDo9ICdEUk9QIFRSSUdHRVIgIid8fHZhcl9zcmNfc2NoZW1hIHx8
JyIuIid8fHZhcl90cmlnZ2VyfHwnIic7CiAgICAJCUJFR0lOCQkgIAogIAkg
IAkJRVhFQ1VURSBJTU1FRElBVEUgdmFyX3NxbDsJCQkKICAJICAJCUVYQ0VQ
VElPTiBXSEVOIE9USEVSUyBUSEVOCiAgCSAgCQlCRUdJTgogIAkJICAJCXZh
cl9yZXQgOj0gJ2ZhaWxlZCB0byBkcm9wIGNhcHR1cmUgdHJpZ2dlciAnfHx2
YXJfc3JjX3NjaGVtYSB8fCcuJ3x8dmFyX3RyaWdnZXI7CiAgCQkgIAkJREJN
U19HREFFQ0RDLmZfcmFpc2VHZGFlRXJyb3IodmFyX3JldCk7CiAgCQkgIAkJ
UkVUVVJOIHZhcl9yZXQ7CiAgCSAgCQlFTkQ7CiAgICAJCUVORDsKCQlFTkQg
SUY7CgkJSUYgKERCTVNfR0RBRUNEQy5mX29iamVjdEV4aXN0KHZhcl90YWJs
ZSwnVEFCTEUnLHZhcl9zY2hlbWEpKSBUSEVOCiAgICAJCXZhcl9zcWwgOj0g
J0RST1AgVEFCTEUgIid8fHZhcl9zY2hlbWEgfHwnIi4iJ3x8dmFyX3RhYmxl
fHwnIic7CiAgICAJCUJFR0lOICAJCSAgCiAgCQkgIAkJRVhFQ1VURSBJTU1F
RElBVEUgdmFyX3NxbDsKICAJCSAgCQlFWENFUFRJT04gV0hFTiBPVEhFUlMg
VEhFTgogIAkJICAJCUJFR0lOCiAgCQkJICAJCXZhcl9yZXQgOj0gJ2ZhaWxl
ZCB0byBkcm9wIGNhcHR1cmUgdGFibGUgJ3x8dmFyX3NjaGVtYSB8fCcuJ3x8
dmFyX3RhYmxlOwogIAkJCSAgCQlEQk1TX0dEQUVDREMuZl9yYWlzZUdkYWVF
cnJvcih2YXJfcmV0KTsKICAJCQkgIAkJUkVUVVJOIHZhcl9yZXQ7CiAgCQkg
IAkJRU5EOwkJCQogICAgCQlFTkQ7CgkJRU5EIElGOwoJCQoJCUlGIChEQk1T
X0dEQUVDREMuZl9vYmplY3RFeGlzdCh2YXJfdGFibGVfYmxvYiwnVEFCTEUn
LHZhcl9zY2hlbWEpKSBUSEVOCiAgICAJCUlGIChJc051bGwoTEVOR1RIKHZh
cl90YWJsZV9ibG9iKSwwKSA+IDApIFRIRU4KICAJICAJCXZhcl9zcWwgOj0g
J0RST1AgVEFCTEUgIid8fHZhcl9zY2hlbWEgfHwnIi4iJ3x8dmFyX3RhYmxl
X2Jsb2J8fCciJzsKICAJICAJCUJFR0lOCiAgCSAgCQkJRVhFQ1VURSBJTU1F
RElBVEUgdmFyX3NxbDsKICAJICAJCQlFWENFUFRJT04gV0hFTiBPVEhFUlMg
VEhFTgogIAkgIAkJCUJFR0lOCiAgCSAgCQkJCXZhcl9yZXQgOj0gJ2ZhaWxl
ZCB0byBkcm9wIGNhcHR1cmUgYmxvYiB0YWJsZSAnfHx2YXJfc2NoZW1hIHx8
Jy4nfHx2YXJfdGFibGVfYmxvYjsKICAJICAJCQkJREJNU19HREFFQ0RDLmZf
cmFpc2VHZGFlRXJyb3IodmFyX3JldCk7CiAgCSAgCQkJCVJFVFVSTiB2YXJf
cmV0OwkKICAJICAJCQlFTkQ7CiAgCSAgCQlFTkQ7CiAgICAJCUVORCBJRjsK
CQlFTkQgSUY7CgkJLyogdmFyX3NlcW5hbWUgOj0gREJNU19HREFFQ0RDLmZf
Z2V0U2VxTmFtZSh2YXJfc2NoZW1hLHZhcl90YWJsZSk7ICovCQoJCUlGIChE
Qk1TX0dEQUVDREMuZl9vYmplY3RFeGlzdCh2YXJfc2VxbmFtZSwnU0VRVUVO
Q0UnLHZhcl9zY2hlbWEpKSBUSEVOCiAgICAJCXZhcl9zcWwgOj0gJ0RST1Ag
U0VRVUVOQ0UgIid8fHZhcl9zY2hlbWF8fCciLiInfHx2YXJfc2VxbmFtZXx8
JyInOwogICAgCQlCRUdJTgogIAkgIAkJRVhFQ1VURSBJTU1FRElBVEUgdmFy
X3NxbDsKICAJICAJCUVYQ0VQVElPTiBXSEVOIE9USEVSUyBUSEVOCiAgCSAg
CQlCRUdJTgogIAkJICAJCXZhcl9yZXQgOj0gJ2ZhaWxlZCB0byBkcm9wIHNl
cXVlbmNlICd8fHZhcl9zZXFuYW1lOwogIAkJICAJCURCTVNfR0RBRUNEQy5m
X3JhaXNlR2RhZUVycm9yKHZhcl9yZXQpOwogIAkJICAJCVJFVFVSTiB2YXJf
cmV0OwkJCQkKICAJICAJCUVORDsKICAgIAkJRU5EOwoJCUVORCBJRjsKCQlC
RUdJTiAKCQkJREVMRVRFIFBVQkxJQy5jYXB0dXJlX2NvbmZpZyBXSEVSRSBj
ZGNfdGFibGVfbmFtZSA9IHRhYmxlX25hbWU7CgkJCUVYQ0VQVElPTiBXSEVO
IE9USEVSUyBUSEVOCgkJCUJFR0lOCgkJCQl2YXJfcmV0IDo9ICdmYWlsZWQg
dG8gZGVsZXRlIGluZm8gZm9yIGNhcHR1cmUgdGFibGUgJ3x8dGFibGVfbmFt
ZTsKCQkJCURCTVNfR0RBRUNEQy5mX3JhaXNlR2RhZUVycm9yKHZhcl9yZXQp
OwoJCQkJUkVUVVJOIHZhcl9yZXQ7CQkJCQoJCQlFTkQ7CgkJRU5EOwkKCQkK
CQlSRVRVUk4gJyc7CglFTkQ7CgkvKgoJZ2V0IHRhYmxlIGNvbHVtbnMKCSov
CglGVU5DVElPTiBmX2dldENvbHVtbnNFeCgKCSAgY29sdW1uX3R5cGUgSU5U
LCAvKiAxIG5vcm1hbCBjb2x1bW5zIDIgbG9iIGNvbHVtbnMgKi8KCQlzY2hl
bWFfbmFtZSBWQVJDSEFSKDIwMCksCgkJdGFibGVfbmFtZSBWQVJDSEFSKDIw
MCksCgkJT1VUIGNvbHVtbl9uYW1lcyBWQVJDSEFSKDIwMClbXSkKCVJFVFVS
TlMgVkFSQ0hBUigyMDApCglBUwoJREVDTEFSRQoJdmFyX3RhYmxlX29pZCBP
SUQgOj0gMDsKCXZhcl9yb3cgSU5UIDo9IDA7Cgl2YXJfY29sdW1uX25hbWUg
VkFSQ0hBUigyMDApIDo9ICcnOwoJdmFyX3JldCBWQVJDSEFSKDIwMCkgOj0g
Jyc7CgljdXJfZ2V0VGFibGVDb2x1bW5zIFJFRkNVUlNPUjsKCUJFR0lOCgkJ
dmFyX3RhYmxlX29pZCA6PSBJc051bGwoREJNU19HREFFQ0RDLmZfZ2V0VGFi
bGVPSUQoc2NoZW1hX25hbWUsdGFibGVfbmFtZSksMCk7CgkJSUYgKHZhcl90
YWJsZV9vaWQgPSAwKSBUSEVOCgkJCXZhcl9yZXQgOj0gJ3RhYmxlICd8fHRh
YmxlX25hbWV8fCcgZG9lc24nJ3QgZXhpc3QgaW4gc2NoZW1hICd8fHNjaGVt
YV9uYW1lOwoJCQlSRVRVUk4gdmFyX3JldDsKCQlFTkQgSUY7CgkJCgkJdmFy
X3JvdyA6PSAxOwoJCU9QRU4gY3VyX2dldFRhYmxlQ29sdW1ucyBGT1IgCgkJ
U0VMRUNUIGEuYXR0bmFtZQogICAgCQlGUk9NIHN5c19hdHRyaWJ1dGUgYQog
ICAgCQlXSEVSRSBhLmF0dHJlbGlkID0gdmFyX3RhYmxlX29pZCAKCQkJQU5E
IGEuYXR0bnVtID4gMCAKCQkJQU5EIE5PVCBhLmF0dGlzZHJvcHBlZCAKCQkJ
QU5EICggKGZvcm1hdF90eXBlKGEuYXR0dHlwaWQsIGEuYXR0dHlwbW9kKSBO
T1QgSU4gKCdCTE9CJywnQ0xPQicpIEFORCBjb2x1bW5fdHlwZSA9IDEpIAoJ
CQlPUiAoZm9ybWF0X3R5cGUoYS5hdHR0eXBpZCwgYS5hdHR0eXBtb2QpIElO
ICgnQkxPQicsJ0NMT0InKSBBTkQgY29sdW1uX3R5cGUgPSAyKSApIAogICAg
CQlPUkRFUiBCWSBhLmF0dG51bTsKCQlMT09QCQoJCQlGRVRDSCBjdXJfZ2V0
VGFibGVDb2x1bW5zIElOVE8gdmFyX2NvbHVtbl9uYW1lOwoJCQlFWElUIFdI
RU4gY3VyX2dldFRhYmxlQ29sdW1ucyVOb3RGb3VuZDsKCQkJY29sdW1uX25h
bWVzW3Zhcl9yb3ddIDo9IHZhcl9jb2x1bW5fbmFtZTsKCQkJdmFyX3JvdyA6
PSB2YXJfcm93ICsgMTsKCQlFTkQgTE9PUDsKCQlDTE9TRSBjdXJfZ2V0VGFi
bGVDb2x1bW5zOwoJCVJFVFVSTiB2YXJfcmV0OwoJCUVYQ0VQVElPTiBXSEVO
IE9USEVSUyBUSEVOCgkJQkVHSU4KCQkJdmFyX3JldCA6PSAnZXJyb3IgaGFw
cGVuZWQgd2hlbiBmX2dldENvbHVtbnNFeCc7CgkJCURCTVNfR0RBRUNEQy5m
X3JhaXNlR2RhZUVycm9yKHZhcl9yZXQpOwoJCQlSRVRVUk4gdmFyX3JldDsJ
CQkJCgkJRU5EOwoJRU5EOwoJLyoKCWdldCBjb21wYXJlIGZ1bmN0aW9uIGZv
ciBjZGMgdHJpZ2dlcgoJKi8KCUZVTkNUSU9OIGZfZ2V0Q29tcGFyZUZ1bnRp
b25OYW1lCgkoCglzY2hlbWFfbmFtZSBWQVJDSEFSKDIwMCksCgl0YWJsZV9u
YW1lIFZBUkNIQVIoMjAwKSwKCWNvbHVtbl9uYW1lIFZBUkNIQVIoMjAwKQoJ
KQoJUkVUVVJOUyBWQVJDSEFSKDIwMCkKCUFTCglERUNMQVJFCgl2YXJfdGFi
X29pZCBPSUQgOj0gMDsKCXZhcl90eXBlX25hbWUgVkFSQ0hBUigyMDApIDo9
ICcnOwoJQkVHSU4KCQl2YXJfdGFiX29pZCA6PSBEQk1TX0dEQUVDREMuZl9n
ZXRUYWJsZU9JRChzY2hlbWFfbmFtZSx0YWJsZV9uYW1lKTsKCQlJRiAodmFy
X3RhYl9vaWQgPSAwKSBUSEVOCgkJCVJFVFVSTiAnJzsKCQlFTkQgSUY7CgkJ
U0VMRUNUIHR5cG5hbWUKCQlJTlRPIHZhcl90eXBlX25hbWUKCQlGUk9NIHN5
c190eXBlIHQsc3lzX2F0dHJpYnV0ZSBhCgkJV0hFUkUgKCBhLmF0dHR5cGlk
ID0gdC5vaWQgKSBBTkQKICAJCSAgICAgICggYS5hdHRyZWxpZCA9IHZhcl90
YWJfb2lkICkgQU5ECgkJICAgICAgKCBhLmF0dG5hbWUgPSBjb2x1bW5fbmFt
ZSk7CSAgCQogICAKICAJCUlGIHZhcl90eXBlX25hbWUgSU4gKCdCWVRFQScp
IFRIRU4KICAJCQlSRVRVUk4gJ0RCTVNfR0RBRUNEQy5mX2NvbXBhcmVWYWx1
ZXNCeXRlYSc7CiAgCQlFTFNFSUYgdmFyX3R5cGVfbmFtZSBJTiAoJ0JJVCcs
J1ZBUkJJVCcpIFRIRU4KICAJCQlSRVRVUk4gJ0RCTVNfR0RBRUNEQy5mX2Nv
bXBhcmVWYWx1ZXNCaXQnOwogIAkJRUxTRUlGIHZhcl90eXBlX25hbWUgSU4g
KCdUU1FVRVJZJykgVEhFTgogIAkJCVJFVFVSTiAnREJNU19HREFFQ0RDLmZf
Y29tcGFyZVZhbHVlc1RzcXVlcnknOwogIAkJRUxTRQogIAkJCVJFVFVSTiAn
REJNU19HREFFQ0RDLmZfY29tcGFyZVZhbHVlcyc7CiAgCQlFTkQgSUY7CglF
TkQ7CgkvKgoJZ2V0IGNvbHVtbiB0eXBlCgkqLwoJRlVOQ1RJT04gZl9nZXRG
b3JtYXRUeXBlKHRhYmxlX29pZCBPSUQsY29sdW1uX25hbWUgVkFSQ0hBUigy
MDApKQoJUkVUVVJOUyBWQVJDSEFSKDIwMCkgLyogc3VjY2Vzc3MgJycgZWxz
ZSBlcnJvciBtZXNzYWdlICovCglBUwoJREVDTEFSRQoJdmFyX2Z0eXBlIFZB
UkNIQVIoMjAwKSA6PSAnJzsKCUJFR0lOCgkJU0VMRUNUIGZvcm1hdF90eXBl
KGEuYXR0dHlwaWQsIGEuYXR0dHlwbW9kKQoJCUlOVE8gdmFyX2Z0eXBlCgkJ
RlJPTSBzeXNfYXR0cmlidXRlIGEKCQlXSEVSRSAoIGEuYXR0cmVsaWQgPSB0
YWJsZV9vaWQgKSBBTkQgCgkJICAgICAgKCBhdHRuYW1lID0gY29sdW1uX25h
bWUgKTsKCQlJRiAoSXNOdWxsKExFTkdUSCh2YXJfZnR5cGUpLDApID0gMCkg
VEhFTgoJCQlEQk1TX0dEQUVDREMuZl9yYWlzZUdkYWVFcnJvcignY29sdW1u
ICd8fElzTnVsbChjb2x1bW5fbmFtZSwnIG51bGwgJyl8fCcgaW52YWxpZCcp
OwoJCUVORCBJRjsKCQlSRVRVUk4gdmFyX2Z0eXBlOwoJRU5EOwoJLyoKCWdl
dCBiYXNlIGNvbHVtbiBpbmZvIGZvciBzdWJzY3JpcHRpb24gdGFibGUKCSov
CglGVU5DVElPTiBmX2dldFN1YlRhYmxlSW5mbygKCWluZm9UeXBlIElOVCwv
KiBpbmZvIHR5cGUKCQkJCSAgMSBzdWJzY3JpcHRpb24gdGFibGUgKHdpdGgg
Y29sdW1uIHR5cGUpCgkJCQkgIDIgc3Vic2NyaXB0aW9uIGxvYiB0YWJsZSAo
d2l0aCBjb2x1bW4gdHlwZSkKCQkJCSAgMyBzdWJzY3JpcHRpb24gdGFibGUg
KHdpdGhvdXQgY29sdW1uIHR5cGUpCgkJCQkgIDQgc3Vic2NyaXB0aW9uIGxv
YiB0YWJsZSAod2l0aG91dCBjb2x1bW4gdHlwZSkKCQkJCSAqLwoJaXNSb3dJ
RCBCT09MRUFOIAoJKQoJUkVUVVJOUyBURVhUCglBUwoJREVDTEFSRQoJdmFy
X3JldHVybkluZm8gVEVYVFtdOwoJQkVHSU4KCQl2YXJfcmV0dXJuSW5mb1sx
XSA6PSAnT1BfU0VRIEJJR0lOVCBQUklNQVJZIEtFWSxPUF9UWVBFIENIQVIo
MSkgTk9UIE5VTEwsIEhBU19CTE9CIENIQVIoMSknIAoJCQkJCXx8IChDQVNF
IFdIRU4gKGlzUm93SUQgPSBUUlVFKSBUSEVOICcsIFJPV19JRCBPSUQnIEVM
U0UgJycgRU5EKSB8fCAnLCBPUF9FUlJPUiBDSEFSKDEwMCknOwoJICAgICAg
ICAgICAgICAgICAgICAKCQl2YXJfcmV0dXJuSW5mb1syXSA6PSAnT1BfU0VR
IEJJR0lOVCBQUklNQVJZIEtFWSxDT0xfTkFNRSBWQVJDSEFSMigxMjgpLFJP
V19JRCBPSUQnOwkJCgkJdmFyX3JldHVybkluZm9bM10gOj0gJ09QX1NFUSxP
UF9UWVBFLEhBU19CTE9CJyAKCQkJCQl8fCAoQ0FTRSBXSEVOIChpc1Jvd0lE
ID0gVFJVRSkgVEhFTiAnLCBST1dfSUQnIEVMU0UgJycgRU5EKSB8fCAnLCBP
UF9FUlJPUic7CgkJdmFyX3JldHVybkluZm9bNF0gOj0gJ09QX1NFUSxDT0xf
TkFNRSxST1dfSUQnOwoJICAgIAoJCUlGIE5PVCAoaW5mb1R5cGUgaW4gKDEs
MiwzLDQpKSBUSEVOCgkJCVJFVFVSTiAnJzsKCQlFTkQgSUY7CgkJUkVUVVJO
IHZhcl9yZXR1cm5JbmZvW2luZm9UeXBlXTsJCQkKCUVORDsgCgkvKgoJZ2V0
IGNvbHVtbiBsb2IgY29sdW1ucyBjb3VudAoJKi8KCUZVTkNUSU9OIGZfaXNM
b2JDb2x1bW4odGFibGVfb2lkIE9JRCxjb2x1bW5fbmFtZSBWQVJDSEFSKDIw
MCkpCglSRVRVUk5TIEJPT0xFQU4KCUFTCglERUNMQVJFCgl2YXJfY291bnQg
SU5UIDo9IDA7CglCRUdJTgoJCVNFTEVDVCBDT1VOVCgqKSAKCQlJTlRPIHZh
cl9jb3VudAoJCUZST00gc3lzX2F0dHJpYnV0ZSBhCgkJV0hFUkUgKCBhLmF0
dHJlbGlkID0gdGFibGVfb2lkICkgQU5ECgkJCSAgKCBhLmF0dG51bSA+IDAg
KSBBTkQgKCBOT1QgYS5hdHRpc2Ryb3BwZWQgKSBBTkQKCQkJICAoIGZvcm1h
dF90eXBlKGEuYXR0dHlwaWQsIGEuYXR0dHlwbW9kKSBJTiAoJ0JMT0InLCdD
TE9CJykpIEFORAoJCQkgICggYS5hdHRuYW1lID0gY29sdW1uX25hbWUgKTsK
CQkJICAKCQlJRiAodmFyX2NvdW50ID4gMCkgVEhFTgoJCQlSRVRVUk4gVFJV
RTsKCQlFTkQgSUY7CgkJUkVUVVJOIEZBTFNFOwoJRU5EOyAKCS8qCglnZXQg
c3Vic2NyaXB0aW9uIHRhYmxlIG5hbWUKCSovCglGVU5DVElPTiBmX2dldFRh
YmxlTmFtZSgKCXNyY19zY2hlbWFfbmFtZSBWQVJDSEFSKDIwMCksCglzcmNf
dGFibGVfbmFtZSBWQVJDSEFSKDIwMCksCgljb2xfbmFtZXMgVkFSQ0hBUigy
MDApW10sCglleHByX3R5cGVzIFZBUkNIQVIoMjAwKVtdLAoJZXhwcl9jb250
ZW50cyBWQVJDSEFSKDIwMClbXSwKCU9VVCB0YWJsZV9uYW1lIFZBUkNIQVIo
MjAwKSwKCU9VVCB0YWJsZV9uYW1lX2Jsb2IgVkFSQ0hBUigyMDApICkKCVJF
VFVSTiBWQVJDSEFSKDIwMCkgLyogc3VjY2Vzc3MgJycgZWxzZSBlcnJvciBt
ZXNzYWdlICovCglBUwoJREVDTEFSRQoJdmFyX3RhYmxlX29pZCBPSUQgOj0w
OwoJdmFyX2NyZWF0ZVRhYmxlIEJPT0xFQU4gOj0gRkFMU0U7Cgl2YXJfY3Jl
YXRlTG9iVGFibGUgQk9PTEVBTiA6PSBGQUxTRTsKCXZhcl9yZXQgVkFSQ0hB
UigyMDApIDo9ICcnOwoJdmFyX25hbWVzX3NpemUgSU5UIDo9IDA7Cgl2YXJf
Y29udGVudHNfc2l6ZSBJTlQgOj0gMDsKCXZhcl9hcnJheV9yb3cgSU5UIDo9
IDA7Cgl2YXJfaXNMb2JDb2x1bW4gQk9PTEVBTiA6PSBGQUxTRTsJCglCRUdJ
TgkKCQl2YXJfdGFibGVfb2lkID0gREJNU19HREFFQ0RDLmZfZ2V0VGFibGVP
SUQoc3JjX3NjaGVtYV9uYW1lLHNyY190YWJsZV9uYW1lKTsKCQlJRiAodmFy
X3RhYmxlX29pZCBJUyBOVUxMIE9SIHZhcl90YWJsZV9vaWQgPSAwKSBUSEVO
CgkJCXZhcl9yZXQgOj0ndGFibGUgJ3x8c3JjX3RhYmxlX25hbWV8fCdkb2Vz
bicndCBleGlzdCBpbiBzY2hlbWEgJ3x8c3JjX3NjaGVtYV9uYW1lOwoJCQlE
Qk1TX0dEQUVDREMuZl9yYWlzZUdkYWVFcnJvcih2YXJfcmV0KTsKCQkJUkVU
VVJOIHZhcl9yZXQ7CgkJRU5EIElGOwoJCQoJCXZhcl9uYW1lc19zaXplIDo9
IElzTnVsbChBUlJBWV9MRU5HVEgoY29sX25hbWVzLDEpLDApOwoJCXZhcl9j
b250ZW50c19zaXplIDo9IElzTnVsbChBUlJBWV9MRU5HVEgoZXhwcl9jb250
ZW50cywxKSwwKTsKCQkvKiB2YXJfY291bnQgOj0gREJNU19HREFFQ0RDLmZf
Z2V0VGFibGVIYXNMb2JDb3VudCh2YXJfdGFibGVfb2lkKTsgKi8KCQkvKiBs
b2IgY29sdW1uIHRoZW4gY3JlYXRlIGxvYiB0YWJsZSAqLwoJCXZhcl9hcnJh
eV9yb3cgOj0gMTsKCQlMT09QCQkJCgkJCUlGICh2YXJfbmFtZXNfc2l6ZSA9
IDApIFRIRU4KCQkJCXZhcl9jcmVhdGVMb2JUYWJsZSA6PSBGQUxTRTsKCQkJ
CUVYSVQ7CgkJCUVORCBJRjsKCQkJSUYgKHZhcl9hcnJheV9yb3cgPiB2YXJf
bmFtZXNfc2l6ZSkgVEhFTgoJCQkJRVhJVDsKCQkJRU5EIElGOwkJCgkJCUlG
IChleHByX2NvbnRlbnRzW3Zhcl9hcnJheV9yb3ddIElTIE5VTEwgT1IgZXhw
cl9jb250ZW50c1t2YXJfYXJyYXlfcm93XSA9ICcnKSBUSEVOCgkJCS8qIG5v
cm1hbCBjb2x1bW4gKi8KCQkJCXZhcl9pc0xvYkNvbHVtbiA9IERCTVNfR0RB
RUNEQy5mX2lzTG9iQ29sdW1uKHZhcl90YWJsZV9vaWQsY29sX25hbWVzW3Zh
cl9hcnJheV9yb3ddKTsKCQkJCUlGICh2YXJfaXNMb2JDb2x1bW4pIFRIRU4K
CQkJCQl2YXJfY3JlYXRlTG9iVGFibGUgOj0gVFJVRTsKCQkJCUVMU0UKCQkJ
CQl2YXJfY3JlYXRlVGFibGUgOj0gVFJVRTsJCQkJCQoJCQkJRU5EIElGOwoJ
CQlFTFNFCgkJCQl2YXJfY3JlYXRlVGFibGUgOj0gVFJVRTsKCQkJRU5EIElG
OwoJCQl2YXJfYXJyYXlfcm93IDo9IHZhcl9hcnJheV9yb3cgKyAxOwoJCUVO
RCBMT09QOwkKCQkKCQlJRiAoIHZhcl9jcmVhdGVUYWJsZSApIFRIRU4KCQkJ
dGFibGVfbmFtZSA6PSBEQk1TX0dEQUVDREMuZl9nZXRUYWJsZU5hbWVOKHNy
Y190YWJsZV9uYW1lLEZBTFNFKTsKCQlFTkQgSUY7CgkJCgkJSUYgKCB2YXJf
Y3JlYXRlTG9iVGFibGUgKSBUSEVOCgkJCXRhYmxlX25hbWVfYmxvYiA6PSBE
Qk1TX0dEQUVDREMuZl9nZXRUYWJsZU5hbWVOKHNyY190YWJsZV9uYW1lLFRS
VUUpOwoJCUVORCBJRjsKCQkKCQlSRVRVUk4gdmFyX3JldDsKCUVORDsKCS8q
CglnZXQgc3Vic2NyaXB0aW9uIHRhYmxlIG5hbWUKCSovCglGVU5DVElPTiBm
X2dldFRhYmxlTmFtZU4odGFibGVfbmFtZSBWQVJDSEFSKDIwMCksaXNCbG9i
VGFibGUgQk9PTEVBTiApCglSRVRVUk5TIFZBUkNIQVIoMjAwKQoJQVMKCURF
Q0xBUkUKCXZhcl9jb3VudCBJTlQgOj0wOwoJdmFyX3RhYmxlTiBJTlQgOj0x
OwoJdmFyX2pvaW5lZCBWQVJDSEFSKDEwKSA6PSdfJzsKCXZhcl9jYXB0dXJl
X3RhYmxlX25hbWUgVkFSQ0hBUigyMDApOwoJQkVHSU4KCQlJRiAoaXNCbG9i
VGFibGUpIFRIRU4KCQkJdmFyX2pvaW5lZCA6PSAnX0JMT0InIHx8IHZhcl9q
b2luZWQ7CgkJRU5EIElGOwoJCUxPT1AJCgkJCXZhcl9jYXB0dXJlX3RhYmxl
X25hbWUgOj0gJ0NEQ18nIHx8IHRhYmxlX25hbWUgfHwgdmFyX2pvaW5lZCB8
fCBUT19DSEFSKHZhcl90YWJsZU4pOwoJCQlTRUxFQ1QgY291bnQoKikgCgkJ
CUlOVE8gdmFyX2NvdW50IAoJCQlGUk9NIHN5c19jbGFzcyAKCQkJV0hFUkUg
cmVsbmFtZSA9IHZhcl9jYXB0dXJlX3RhYmxlX25hbWUgOyAJCQoJCQlJRiAo
dmFyX2NvdW50ID0gMCkgVEhFTgoJCQkJUkVUVVJOIHZhcl9jYXB0dXJlX3Rh
YmxlX25hbWU7CgkJCUVORCBJRjsJCQoJCQl2YXJfdGFibGVOID0gdmFyX3Rh
YmxlTiArIDE7CQkKCQlFTkQgTE9PUDsgCglFTkQ7IAoJLyoKCWdldCB0YWJs
ZSBvaWQKCSovCglGVU5DVElPTiBmX2dldFRhYmxlT0lEKHNjaGVtYV9uYW1l
IFZBUkNIQVIoMjAwKSx0YWJsZV9uYW1lIFZBUkNIQVIoMjAwKSkKCVJFVFVS
TlMgT0lECglBUwoJREVDTEFSRQoJdmFyX3RhYmxlX29pZCBPSUQgOj0gMDsK
CUJFR0lOCiAgICAJCVNFTEVDVCBjLm9pZCAKCQlJTlRPIHZhcl90YWJsZV9v
aWQKCQlGUk9NIHN5c19jbGFzcyBjCgkJTEVGVCBKT0lOIHN5c19uYW1lc3Bh
Y2UgbiBPTiBuLm9pZCA9IGMucmVsbmFtZXNwYWNlCgkJV0hFUkUgYy5yZWxw
YXJ0dHlwIDw+ICdwJwoJCUFORCAoIG4ubnNwbmFtZSA9IHNjaGVtYV9uYW1l
IE9SIHNjaGVtYV9uYW1lIElTIE5VTEwpIC8qIHNjaGVtYV9uYW1lICovCgkJ
QU5EIGMucmVsbmFtZSA9IHRhYmxlX25hbWUgLyogdGFibGVfbmFtZSAqLwoJ
CTsgLyogQU5EIHN5c190YWJsZV9pc192aXNpYmxlKGMub2lkKSAqLwoJCVJF
VFVSTiB2YXJfdGFibGVfb2lkOwoJRU5EOwoJLyoKCXdyaXRlIGNhcHR1cmVf
Y29uZmlnCgkqLwoJRlVOQ1RJT04gZl93cml0ZUNhcHR1cmVJbmZvKAoJc3Jj
X3NjaGVtYV9uYW1lIFZBUkNIQVIoMjAwKSwKCXNyY190YWJsZV9uYW1lIFZB
UkNIQVIoMjAwKSwKCWRlc19zY2hlbWFfbmFtZSBWQVJDSEFSKDIwMCksCgl0
YWJsZV9uYW1lIFZBUkNIQVIoMjAwKSwKCXRhYmxlX25hbWVfYmxvYiBWQVJD
SEFSKDIwMCksCgl0YWJsZV90cmlnZ2VycyBWQVJDSEFSKDIwMClbXSAKCSkK
CVJFVFVSTlMgVkFSQ0hBUigyMDApIC8qIHN1Y2Nlc3NzICcnIGVsc2UgZXJy
b3IgbWVzc2FnZSAqLwoJQVMKCURFQ0xBUkUKCXZhcl9pIElOVCA7Cgl2YXJf
dHJpZ2dlcnNfc2l6ZSBJTlQ7Cgl2YXJfcmV0IFZBUkNIQVIoMjAwKSA6PSAn
JzsKCXZhcl9zZXFuYW1lIFZBUkNIQVIoMjAwKSA6PSBEQk1TX0dEQUVDREMu
Zl9nZXRTZXFOYW1lKHRhYmxlX25hbWUpOwoJQkVHSU4KCQl2YXJfdHJpZ2dl
cnNfc2l6ZSA6PSBJc051bGwoQVJSQVlfTEVOR1RIKHRhYmxlX3RyaWdnZXJz
LDEpLDApOwoJCXZhcl9pIDo9IDE7CgkJTE9PUAoJCQlJRiAodmFyX2kgPiB2
YXJfdHJpZ2dlcnNfc2l6ZSkgVEhFTgoJCQkJRVhJVDsKCQkJRU5EIElGOwoJ
CgkJCUJFR0lOCgkJCQlJTlNFUlQgSU5UTyBQVUJMSUMuY2FwdHVyZV9jb25m
aWcoY2RjX3NyY19zY2hlbWFfbmFtZSxjZGNfc3JjX3RhYmxlX25hbWUsY2Rj
X3NjaGVtYV9uYW1lLGNkY190YWJsZV9uYW1lLGNkY190YWJsZV9uYW1lX2Js
b2IsY2RjX3RyaWdnZXJfbmFtZSxjZGNfc2VxdWVuY2VfbmFtZSkKCQkJCVZB
TFVFUyhzcmNfc2NoZW1hX25hbWUsc3JjX3RhYmxlX25hbWUsZGVzX3NjaGVt
YV9uYW1lLHRhYmxlX25hbWUsdGFibGVfbmFtZV9ibG9iLHRhYmxlX3RyaWdn
ZXJzW3Zhcl9pXSx2YXJfc2VxbmFtZSk7CgkJCQlFWENFUFRJT04gV0hFTiBP
VEhFUlMgVEhFTgoJCQkJQkVHSU4KCQkJCQl2YXJfcmV0IDo9ICdlcnJvciBo
YXBwZW5lZCB0byBpbnNlcnQgY2FwdHVyZV9jb25maWcsJ3x8REJNU19HREFF
Q0RDLmZfZ2V0U3FsZXJybSgpOwoJCQkJCURCTVNfR0RBRUNEQy5mX3JhaXNl
R2RhZUVycm9yKHZhcl9yZXQpOwoJCQkJCVJFVFVSTiB2YXJfcmV0OwoJCQkJ
RU5EOwoJCQlFTkQ7CgkJCXZhcl9pIDo9IHZhcl9pICsgMTsKCQlFTkQgTE9P
UDsKCQlSRVRVUk4gdmFyX3JldDsKCUVORDsgCgkvKgoJaWYgY29sdW1uX25h
bWUgaXMga2V5IGNvbHVtbiBvciBub3QKCSovCQoJRlVOQ1RJT04gZl9pc0tl
eUNvbHVtbigKCXRhYl9vaWQgT0lELCAKCWNvbHVtbl9uYW1lIFZBUkNIQVIo
MjAwKSkKCVJFVFVSTlMgQk9PTEVBTgoJQVMKCURFQ0xBUkUKCXZhcl9jb3Vu
dCBJTlQgOj0gMDsKCUJFR0lOCgkJU0VMRUNUIENPVU5UKCopCgkJSU5UTyB2
YXJfY291bnQgCgkJRlJPTSBTWVNfQVRUUklCVVRFIEEKCQlXSEVSRSBBLkFU
VFJFTElEID0gdGFiX29pZCBBTkQgCgkJCQlBLkFUVE5VTSA+IDAgQU5EIAoJ
CQkJTk9UIEEuQVRUSVNEUk9QUEVEIEFORCAKCQkJCUEuQVRUTkFNRSA9IGNv
bHVtbl9uYW1lIEFORAoJCQkJQS5BVFROVU0gSU4gKFNFTEVDVCBVTk5FU1Qo
Q09OS0VZKSBGUk9NIFNZU19DT05TVFJBSU5UIFdIRVJFIENPTlJFTElEID0g
dGFiX29pZCBBTkQgQ09OVFlQRSA9ICdwJyApOwoJCQoJCUlGICh2YXJfY291
bnQgPiAwKSBUSEVOCgkJCVJFVFVSTiBUUlVFOwoJCUVMU0UJCgkJCVJFVFVS
TiBGQUxTRTsKCQlFTkQgSUY7CglFTkQ7CgkKCS8qCgljcmVhdGUgdGFibGUg
Y2FwdHVyZV9jb25maWcgaWYgaXQgZG9lc24ndCBleGlzdC4KCSovCQoJRlVO
Q1RJT04gZl9jcmVhdGVDYXB0dXJlQ29uZmlnKCkKCVJFVFVSTlMgQk9PTEVB
TgoJQVMKCURFQ0xBUkUKCXZhcl9jYXB0dXJlX2NvbmZpZ19jb3VudCBJTlQ7
Cgl2YXJfY2FwdHVyZV9jb25maWdfc3FsIFRFWFQ7CglCRUdJTgoJCS8qIGNy
ZWF0ZSBjYXB0dXJlX2NvbmZpZyBpZiBpdCBkb2Vzbid0IGV4aXN0LiAqLwoJ
CVNFTEVDVCBDT1VOVCgqKSAKCQlJTlRPIHZhcl9jYXB0dXJlX2NvbmZpZ19j
b3VudCAKCQlGUk9NIFNZU19DTEFTUyAKCQlXSEVSRSAoUkVMTkFNRSA9ICdD
QVBUVVJFX0NPTkZJRycpIEFORAoJCQkJKCBTWVNfQ0xBU1MuUkVMTkFNRVNQ
QUNFID0gKFNFTEVDVCBPSUQgRlJPTSBTWVNfTkFNRVNQQUNFIFdIRVJFIE5T
UE5BTUUgPSAnUFVCTElDJykgKTsKCQlJRiAodmFyX2NhcHR1cmVfY29uZmln
X2NvdW50ID0gMCkgVEhFTgoJCQl2YXJfY2FwdHVyZV9jb25maWdfc3FsIDo9
ICdDUkVBVEUgVEFCTEUgUFVCTElDLkNBUFRVUkVfQ09ORklHJyB8fAoJCQkJ
CQkJCQknKAlDRENfQ1JFQVRFRCBUSU1FU1RBTVAgREVGQVVMVCBDVVJSRU5U
X1RJTUVTVEFNUCwnIHx8CgkJCQkJCQkJCQknQ0RDX1NSQ19TQ0hFTUFfTkFN
RSBOQU1FIE5PVCBOVUxMLCcgfHwKCQkJCQkJCQkJCSdDRENfU1JDX1RBQkxF
X05BTUUgTkFNRSBOT1QgTlVMTCwnIHx8CgkJCQkJCQkJCQknQ0RDX1NDSEVN
QV9OQU1FIE5BTUUgTk9UIE5VTEwgLCcgfHwKCQkJCQkJCQkJCSdDRENfVEFC
TEVfTkFNRSBOQU1FIE5PVCBOVUxMLCcgfHwKCQkJCQkJCQkJCSdDRENfVEFC
TEVfTkFNRV9CTE9CIE5BTUUsJyB8fAoJCQkJCQkJCQkJJ0NEQ19UUklHR0VS
X05BTUUgTkFNRSBOT1QgTlVMTCwnIHx8CgkJCQkJCQkJCQknQ0RDX1NFUVVF
TkNFX05BTUUgTkFNRSBOT1QgTlVMTCApJzsKCQkJCgkJCUVYRUNVVEUgSU1N
RURJQVRFIHZhcl9jYXB0dXJlX2NvbmZpZ19zcWw7CgkJRU5EIElGOwogICAg
CglSRVRVUk4gVFJVRTsJCglFTkQ7CiAgLyoKCXdoZXRoZXIgb2JqZWN0IGV4
aXN0cyBpbiBzY2hlbWEgCgkqLwkKCUZVTkNUSU9OIGZfb2JqZWN0RXhpc3Qo
CglwX29iamVjdG5hbWUgdmFyY2hhcigyMDApLCAvKiBvYmplY3QgbmFtZSAq
LwoJcF9vYmplY3R0eXBlIHZhcmNoYXIoMjAwKSwgLyogb2JqZWN0IHR5cGUs
VEFCTEUvU0VRVUVDRS9UUklHR0VSIG9ubHkgMyAqLwoJcF9zY2hlbWFuYW1l
IHZhcmNoYXIoMjAwKSkgLyogc2NoZW1hIG5hbWUgKi8KCVJFVFVSTlMgQk9P
TEVBTgoJQVMKCURFQ0xBUkUKCXZhcl9jb3VudCBJTlQ7CQoJQkVHSU4KCQkK
CQlTRUxFQ1QgQ09VTlQoKikgCgkJSU5UTyB2YXJfY291bnQgCgkJRlJPTSBB
TExfT0JKRUNUUyBvLFNZU19OQU1FU1BBQ0UgbgoJCVdIRVJFICggby5PQkpF
Q1RfTkFNRSA9IHBfb2JqZWN0bmFtZSApIEFORAoJCSAgICAgICggby5PQkpF
Q1RfVFlQRSA9IHBfb2JqZWN0dHlwZSApIEFORAoJCSAgICAgICggby5uYW1l
c3BhY2UgPSBuLm9pZCkgQU5ECgkJICAgICAgKCBuLk5TUE5BTUUgPSBwX3Nj
aGVtYW5hbWUgKTsKCQkJCQoJCUlGICh2YXJfY291bnQgPiAwKSBUSEVOCgkJ
ICBSRVRVUk4gVFJVRTsKCQlFTFNFCgkJICBSRVRVUk4gRkFMU0U7CgkJRU5E
IElGOyAgICAKICAgIAkKCUVORDsKRU5EOw==
