---------------------------------------HEAD-----------------------------------
CREATE OR REPLACE PACKAGE DBMS_JOB AUTHID CURRENT_USER AS
	-- If argument instance == any_instance then any instance can execute the job.
	-- But for now, we don't support the binding of job and instance. So argument 
	-- instance must be any_instance(0).
	ANY_INSTANCE 		CONSTANT INTEGER := 0;
	--JS_* for Job Status
	JS_SCHEDULED		CONSTANT INT := 1;
	JS_RUNNING			CONSTANT INT := 0x02;
	JS_BROKEN			CONSTANT INT := 0x08;
	JS_DROPPPED			CONSTANT INT := 0x20000;
	--JF_* for Job Flags -> DBMS_JOB_FLAG
	JF_NO_PARSE			CONSTANT INT := 0x04;
	JF_FORCE			CONSTANT INT := 0x02;
	JF_AUTODROP			CONSTANT INT := 0x08;
	
	-- JLC for job last change by whom? 
	JLC_NEXT_RUN_DATE	CONSTANT INT := 0x02000;
	--cmds
	CMD_UPDATE			CONSTANT TEXT := 'UPDATE';
	CMD_DELETE 			CONSTANT TEXT := 'DELETE';
	--default max_failures. In dbms_job it is 16, and never changes.
	DEF_MAX_FAILURES	CONSTANT INT := 16;
	--alerts to job_manager
	JM_ALERT_CREATE_JOB	CONSTANT TEXT := 'ALERT_XSIGCREATEJOB';
	JM_ALERT_ALTER_JOB	CONSTANT TEXT := 'ALERT_XSIGALTERJOB';
	JM_ALERT_DROP_JOB	CONSTANT TEXT := 'ALERT_XSIGDROPJOB';
	JM_ALERT_RUN_JOB	CONSTANT TEXT := 'ALERT_XSIGRUNJOB';
	
	--notice to notify user the failure of sending alter to job_manager.
	ALERT_FAIL			CONSTANT TEXT := 'Failed to notify job_manager the modification of job.';

	PROCEDURE SUBMIT(JOB OUT BIGINT, 
		WHAT 		IN TEXT, 
		NEXT_DATE 	IN TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
		"INTERVAL" 	IN TEXT DEFAULT 'NULL', 
		NO_PARSE 	IN BOOLEAN DEFAULT FALSE, 
		INSTANCE 	IN INTEGER DEFAULT 0, 
		FORCE 		IN BOOLEAN DEFAULT FALSE);

	PROCEDURE ISUBMIT(JOB IN BIGINT, 
		WHAT 		IN TEXT, 
		NEXT_DATE 	IN TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
		"INTERVAL" 	IN TEXT DEFAULT 'NULL', 
		NO_PARSE 	IN BOOLEAN DEFAULT FALSE, 
		INSTANCE 	IN INTEGER DEFAULT 0, 
		FORCE 		IN BOOLEAN DEFAULT FALSE); 

	PROCEDURE "INTERVAL"(JOB IN BIGINT,
		"INTERVAL" 	IN TEXT);
		
	PROCEDURE WHAT(JOB IN BIGINT,
		WHAT 	IN TEXT);
			
	PROCEDURE RUN(JOB IN BIGINT,
		FORCE 		IN BOOLEAN DEFAULT FALSE);
		
	PROCEDURE BROKEN(JOB IN BIGINT,
		BROKEN		IN  BOOLEAN,
		NEXT_DATE	IN  TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP);

	PROCEDURE REMOVE(JOB IN BIGINT);

	PROCEDURE CHANGE(JOB IN BIGINT,
	   WHAT			IN TEXT,
	   NEXT_DATE	IN TIMESTAMPTZ,
	   "INTERVAL"	IN TEXT,
	   INSTANCE		IN INTEGER DEFAULT 0,
	   FORCE		IN BOOLEAN DEFAULT FALSE);
	
	PROCEDURE INSTANCE(Job 	IN BIGINT,
	   INSTANCE		IN INTEGER,
	   FORCE		IN BOOLEAN DEFAULT FALSE);

	PROCEDURE NEXT_DATE(Job IN BIGINT,
		NEXT_DATE	IN TIMESTAMPTZ);
	   
	PROCEDURE USER_EXPORT(Job 	IN BIGINT,
		   Mycall	IN OUT TEXT);

	PROCEDURE USER_EXPORT(Job	IN BIGINT,
		   Mycall	IN OUT TEXT,
		   Myinst 	IN OUT TEXT);

	--This function is used by submit and isubmit.
	--If job == null, then it generates a new id.
	FUNCTION SUBMIT_INTERNAL(JOB IN BIGINT, 
		WHAT 		IN TEXT, 
		NEXT_DATE 	IN TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
		"INTERVAL" 	IN TEXT DEFAULT 'NULL', 
		NO_PARSE 	IN BOOLEAN DEFAULT FALSE, 
		INSTANCE 	IN INTEGER DEFAULT 0, 
		FORCE 		IN BOOLEAN DEFAULT FALSE)
		RETURN BIGINT;
	
	--bug#15267: "interval" must be in the future.
	FUNCTION PARSE_INTERVAL("INTERVAL" IN TEXT)
		RETURN TEXT;
		
	--bug#16833: lock job for update, in transaction.
	PROCEDURE LOCK_JOB(JOB BIGINT);
END;